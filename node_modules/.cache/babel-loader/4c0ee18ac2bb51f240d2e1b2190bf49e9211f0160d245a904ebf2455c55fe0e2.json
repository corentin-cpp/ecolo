{"ast":null,"code":"import { products, analyzeImage } from './data/products';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      scannedProduct: null,\n      isAnalyzing: false,\n      analysisMessage: 'Analyse de l\\'image...',\n      analysisProgress: 0,\n      analysisFeatures: null,\n      products\n    };\n  },\n  methods: {\n    async openScanner() {\n      this.isAnalyzing = true;\n      this.analysisMessage = 'Analyse de l\\'image...';\n      this.analysisProgress = 0;\n\n      // Simulation de la progression de l'analyse\n      const interval = setInterval(() => {\n        this.analysisProgress += 5;\n        if (this.analysisProgress >= 100) {\n          clearInterval(interval);\n        }\n      }, 100);\n\n      // SÃ©lection alÃ©atoire d'un produit\n      const productKeys = Object.keys(this.products);\n      const randomProductKey = productKeys[Math.floor(Math.random() * productKeys.length)];\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      this.scannedProduct = this.products[randomProductKey];\n      this.analysisFeatures = {\n        transparency: Math.random() > 0.5,\n        shine: Math.random() > 0.7,\n        color: ['clair', 'moyen', 'foncÃ©'][Math.floor(Math.random() * 3)],\n        texture: ['lisse', 'rugueux', 'texturÃ©'][Math.floor(Math.random() * 3)],\n        confidence: Math.floor(Math.random() * 26) + 70\n      };\n      this.isAnalyzing = false;\n      this.analysisProgress = 0;\n    },\n    async handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.isAnalyzing = true;\n        this.analysisMessage = 'Analyse de l\\'image...';\n        this.analysisProgress = 0;\n        const interval = setInterval(() => {\n          this.analysisProgress += 5;\n          if (this.analysisProgress >= 100) {\n            clearInterval(interval);\n          }\n        }, 100);\n        const reader = new FileReader();\n        reader.onload = async e => {\n          try {\n            this.analysisMessage = 'Reconnaissance du type de plastique...';\n            const productId = await analyzeImage(e.target.result);\n            this.scannedProduct = this.products[productId];\n            this.analysisFeatures = {\n              transparency: Math.random() > 0.5,\n              shine: Math.random() > 0.7,\n              color: ['clair', 'moyen', 'foncÃ©'][Math.floor(Math.random() * 3)],\n              texture: ['lisse', 'rugueux', 'texturÃ©'][Math.floor(Math.random() * 3)],\n              confidence: Math.floor(Math.random() * 26) + 70\n            };\n          } catch (error) {\n            console.error('Erreur lors de l\\'analyse:', error);\n            this.analysisMessage = 'Erreur lors de l\\'analyse. Veuillez rÃ©essayer.';\n          } finally {\n            this.isAnalyzing = false;\n            this.analysisProgress = 0;\n          }\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    getScoreClass(score) {\n      if (score >= 8) return 'excellent';\n      if (score >= 6) return 'good';\n      if (score >= 4) return 'medium';\n      return 'poor';\n    },\n    getScoreMessage(score) {\n      if (score >= 8) return 'Excellent choix !';\n      if (score >= 6) return 'Bon choix';\n      if (score >= 4) return 'Peut mieux faire';\n      return 'Impact environnemental Ã©levÃ©';\n    },\n    getImpactClass(value) {\n      if (value === 'Ã‰levÃ©') return 'high';\n      if (value === 'Moyenne' || value === 'Moyen') return 'medium';\n      return 'low';\n    },\n    formatFeatureLabel(key) {\n      const labels = {\n        transparency: 'Transparence',\n        shine: 'Brillance',\n        color: 'Couleur',\n        texture: 'Texture',\n        confidence: 'Confiance'\n      };\n      return labels[key] || key;\n    },\n    formatFeatureValue(key, value) {\n      if (typeof value === 'boolean') {\n        return value ? 'Oui' : 'Non';\n      }\n      if (key === 'confidence') {\n        return value + '%';\n      }\n      return value;\n    },\n    getFeatureClass(key, value) {\n      if (key === 'confidence') {\n        if (value >= 90) return 'high';\n        if (value >= 80) return 'medium';\n        return 'low';\n      }\n      return '';\n    }\n  },\n  computed: {\n    filteredFeatures() {\n      if (!this.analysisFeatures) return [];\n      return Object.entries(this.analysisFeatures).filter(([key]) => key !== 'scores').reduce((acc, [key, value]) => {\n        acc[key] = value;\n        return acc;\n      }, {});\n    }\n  }\n};","map":{"version":3,"names":["products","analyzeImage","name","data","scannedProduct","isAnalyzing","analysisMessage","analysisProgress","analysisFeatures","methods","openScanner","interval","setInterval","clearInterval","productKeys","Object","keys","randomProductKey","Math","floor","random","length","Promise","resolve","setTimeout","transparency","shine","color","texture","confidence","handleImageUpload","event","file","target","files","reader","FileReader","onload","e","productId","result","error","console","readAsDataURL","getScoreClass","score","getScoreMessage","getImpactClass","value","formatFeatureLabel","key","labels","formatFeatureValue","getFeatureClass","computed","filteredFeatures","entries","filter","reduce","acc"],"sources":["/Users/cortex/Documents/Code/ecolo/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <header>\n      <h1>EcoScan</h1>\n      <p>Scannez vos produits pour connaÃ®tre leur impact environnemental</p>\n    </header>\n\n    <main>\n      <div class=\"scanner-section\">\n        <div class=\"scanner-button\" @click=\"openScanner\">\n          <div class=\"scanner-icon\">ðŸ“·</div>\n          <span>Scanner un produit</span>\n        </div>\n        <div class=\"upload-section\">\n          <input \n            type=\"file\" \n            id=\"image-upload\" \n            accept=\"image/*\" \n            @change=\"handleImageUpload\" \n            style=\"display: none\"\n          >\n          <label for=\"image-upload\" class=\"upload-button\">\n            <div class=\"upload-icon\">ðŸ“¤</div>\n            <span>Importer une image</span>\n          </label>\n        </div>\n      </div>\n\n      <div class=\"analysis-section\" v-if=\"isAnalyzing\">\n        <div class=\"loading\">\n          <div class=\"spinner\"></div>\n          <p>Analyse en cours...</p>\n          <p class=\"analysis-details\">{{ analysisMessage }}</p>\n          <div class=\"analysis-progress\" v-if=\"analysisProgress\">\n            <div class=\"progress-bar\">\n              <div class=\"progress\" :style=\"{ width: analysisProgress + '%' }\"></div>\n            </div>\n            <p>{{ analysisProgress }}%</p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"product-info\" v-if=\"scannedProduct\">\n        <div class=\"product-header\">\n          <img :src=\"scannedProduct.image\" :alt=\"scannedProduct.name\" class=\"product-image\">\n          <h2>{{ scannedProduct.name }}</h2>\n        </div>\n\n        <div class=\"eco-score\" :class=\"getScoreClass(scannedProduct.score)\">\n          <div class=\"score-circle\">\n            {{ scannedProduct.score }}/10\n          </div>\n          <p>{{ getScoreMessage(scannedProduct.score) }}</p>\n        </div>\n\n        <div class=\"analysis-details\" v-if=\"analysisResult\">\n          <h3>RÃ©sultats de l'analyse</h3>\n          <div class=\"confidence-level\">\n            <span class=\"label\">Niveau de confiance :</span>\n            <span class=\"value\" :class=\"getConfidenceClass(analysisResult.confidence)\">\n              {{ analysisResult.confidence }}%\n            </span>\n          </div>\n          \n          <div class=\"features-grid\">\n            <div class=\"feature-item\" v-for=\"(value, key) in analysisResult.features\" :key=\"key\">\n              <span class=\"feature-label\">{{ formatFeatureLabel(key) }}</span>\n              <span class=\"feature-value\">{{ formatFeatureValue(key, value) }}</span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"details-section\">\n          <h3>Impact environnemental</h3>\n          <div class=\"impact-details\">\n            <div class=\"impact-item\" v-for=\"(detail, index) in scannedProduct.impactDetails\" :key=\"index\">\n              <span class=\"impact-label\">{{ detail.label }}</span>\n              <span class=\"impact-value\" :class=\"getImpactClass(detail.value)\">{{ detail.value }}</span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"alternatives-section\" v-if=\"scannedProduct.alternatives.length > 0\">\n          <h3>Alternatives plus Ã©cologiques</h3>\n          <div class=\"alternatives-list\">\n            <div class=\"alternative\" v-for=\"(alt, index) in scannedProduct.alternatives\" :key=\"index\">\n              <img :src=\"alt.image\" :alt=\"alt.name\" class=\"alternative-image\">\n              <div class=\"alternative-info\">\n                <h4>{{ alt.name }}</h4>\n                <p class=\"score\">Score : {{ alt.score }}/10</p>\n                <p class=\"description\">{{ alt.description }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"tips-section\">\n          <h3>Conseils d'utilisation</h3>\n          <ul class=\"tips-list\">\n            <li>PrivilÃ©giez les alternatives rÃ©utilisables</li>\n            <li>Recyclez correctement vos dÃ©chets plastiques</li>\n            <li>Ã‰vitez les produits Ã  usage unique</li>\n          </ul>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport { products, analyzeImage } from './data/products'\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      scannedProduct: null,\n      isAnalyzing: false,\n      analysisMessage: 'Analyse de l\\'image...',\n      analysisProgress: 0,\n      analysisFeatures: null,\n      products\n    }\n  },\n  methods: {\n    async openScanner() {\n      this.isAnalyzing = true;\n      this.analysisMessage = 'Analyse de l\\'image...';\n      this.analysisProgress = 0;\n      \n      // Simulation de la progression de l'analyse\n      const interval = setInterval(() => {\n        this.analysisProgress += 5;\n        if (this.analysisProgress >= 100) {\n          clearInterval(interval);\n        }\n      }, 100);\n\n      // SÃ©lection alÃ©atoire d'un produit\n      const productKeys = Object.keys(this.products);\n      const randomProductKey = productKeys[Math.floor(Math.random() * productKeys.length)];\n      \n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      this.scannedProduct = this.products[randomProductKey];\n      this.analysisFeatures = {\n        transparency: Math.random() > 0.5,\n        shine: Math.random() > 0.7,\n        color: ['clair', 'moyen', 'foncÃ©'][Math.floor(Math.random() * 3)],\n        texture: ['lisse', 'rugueux', 'texturÃ©'][Math.floor(Math.random() * 3)],\n        confidence: Math.floor(Math.random() * 26) + 70\n      };\n      \n      this.isAnalyzing = false;\n      this.analysisProgress = 0;\n    },\n    async handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.isAnalyzing = true;\n        this.analysisMessage = 'Analyse de l\\'image...';\n        this.analysisProgress = 0;\n        \n        const interval = setInterval(() => {\n          this.analysisProgress += 5;\n          if (this.analysisProgress >= 100) {\n            clearInterval(interval);\n          }\n        }, 100);\n\n        const reader = new FileReader();\n        \n        reader.onload = async (e) => {\n          try {\n            this.analysisMessage = 'Reconnaissance du type de plastique...';\n            const productId = await analyzeImage(e.target.result);\n            this.scannedProduct = this.products[productId];\n            this.analysisFeatures = {\n              transparency: Math.random() > 0.5,\n              shine: Math.random() > 0.7,\n              color: ['clair', 'moyen', 'foncÃ©'][Math.floor(Math.random() * 3)],\n              texture: ['lisse', 'rugueux', 'texturÃ©'][Math.floor(Math.random() * 3)],\n              confidence: Math.floor(Math.random() * 26) + 70\n            };\n          } catch (error) {\n            console.error('Erreur lors de l\\'analyse:', error);\n            this.analysisMessage = 'Erreur lors de l\\'analyse. Veuillez rÃ©essayer.';\n          } finally {\n            this.isAnalyzing = false;\n            this.analysisProgress = 0;\n          }\n        };\n        \n        reader.readAsDataURL(file);\n      }\n    },\n    getScoreClass(score) {\n      if (score >= 8) return 'excellent'\n      if (score >= 6) return 'good'\n      if (score >= 4) return 'medium'\n      return 'poor'\n    },\n    getScoreMessage(score) {\n      if (score >= 8) return 'Excellent choix !'\n      if (score >= 6) return 'Bon choix'\n      if (score >= 4) return 'Peut mieux faire'\n      return 'Impact environnemental Ã©levÃ©'\n    },\n    getImpactClass(value) {\n      if (value === 'Ã‰levÃ©') return 'high'\n      if (value === 'Moyenne' || value === 'Moyen') return 'medium'\n      return 'low'\n    },\n    formatFeatureLabel(key) {\n      const labels = {\n        transparency: 'Transparence',\n        shine: 'Brillance',\n        color: 'Couleur',\n        texture: 'Texture',\n        confidence: 'Confiance'\n      };\n      return labels[key] || key;\n    },\n    formatFeatureValue(key, value) {\n      if (typeof value === 'boolean') {\n        return value ? 'Oui' : 'Non';\n      }\n      if (key === 'confidence') {\n        return value + '%';\n      }\n      return value;\n    },\n    getFeatureClass(key, value) {\n      if (key === 'confidence') {\n        if (value >= 90) return 'high';\n        if (value >= 80) return 'medium';\n        return 'low';\n      }\n      return '';\n    }\n  },\n  computed: {\n    filteredFeatures() {\n      if (!this.analysisFeatures) return [];\n      return Object.entries(this.analysisFeatures)\n        .filter(([key]) => key !== 'scores')\n        .reduce((acc, [key, value]) => {\n          acc[key] = value;\n          return acc;\n        }, {});\n    }\n  }\n}\n</script>\n\n<style>\n.app {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\nheader {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\nheader h1 {\n  color: #2e7d32;\n  margin-bottom: 10px;\n}\n\n.scanner-section {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.scanner-button, .upload-button {\n  background-color: #4CAF50;\n  color: white;\n  padding: 20px;\n  border-radius: 12px;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  margin: 10px;\n  transition: transform 0.2s;\n}\n\n.scanner-button:hover, .upload-button:hover {\n  transform: scale(1.05);\n}\n\n.upload-section {\n  margin-top: 20px;\n}\n\n.scanner-icon, .upload-icon {\n  font-size: 24px;\n}\n\n.analysis-section {\n  text-align: center;\n  margin: 20px 0;\n}\n\n.loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n}\n\n.analysis-details {\n  color: #666;\n  font-size: 0.9em;\n  margin-top: 10px;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #4CAF50;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.product-info {\n  background-color: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.product-header {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.product-image {\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n  border-radius: 8px;\n}\n\n.eco-score {\n  text-align: center;\n  margin: 20px 0;\n  padding: 20px;\n  border-radius: 12px;\n}\n\n.score-circle {\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background-color: #4CAF50;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  margin: 0 auto 10px;\n}\n\n.excellent .score-circle { background-color: #2e7d32; }\n.good .score-circle { background-color: #4CAF50; }\n.medium .score-circle { background-color: #ff9800; }\n.poor .score-circle { background-color: #f44336; }\n\n.impact-details {\n  margin: 20px 0;\n}\n\n.impact-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.impact-value {\n  font-weight: bold;\n}\n\n.impact-value.high { color: #f44336; }\n.impact-value.medium { color: #ff9800; }\n.impact-value.low { color: #4CAF50; }\n\n.alternatives-section {\n  margin-top: 30px;\n}\n\n.alternatives-list {\n  display: grid;\n  gap: 15px;\n  margin-top: 15px;\n}\n\n.alternative {\n  display: flex;\n  align-items: flex-start;\n  gap: 15px;\n  padding: 15px;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  transition: transform 0.2s;\n}\n\n.alternative:hover {\n  transform: translateY(-2px);\n}\n\n.alternative-image {\n  width: 60px;\n  height: 60px;\n  object-fit: cover;\n  border-radius: 4px;\n}\n\n.alternative-info {\n  flex: 1;\n}\n\n.alternative-info h4 {\n  margin: 0 0 5px 0;\n  color: #2e7d32;\n}\n\n.alternative-info .score {\n  color: #666;\n  font-size: 0.9em;\n  margin: 5px 0;\n}\n\n.alternative-info .description {\n  color: #333;\n  font-size: 0.9em;\n  margin: 5px 0;\n}\n\n.tips-section {\n  margin-top: 30px;\n  padding-top: 20px;\n  border-top: 1px solid #eee;\n}\n\n.tips-list {\n  list-style-type: none;\n  padding: 0;\n}\n\n.tips-list li {\n  padding: 10px;\n  margin: 5px 0;\n  background-color: #e8f5e9;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.tips-list li:before {\n  content: 'ðŸŒ±';\n}\n\n.analysis-progress {\n  margin-top: 20px;\n  width: 100%;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 10px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  overflow: hidden;\n}\n\n.progress {\n  height: 100%;\n  background-color: #4CAF50;\n  transition: width 0.3s ease;\n}\n\n.features-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 15px;\n  margin-top: 15px;\n}\n\n.feature-item {\n  background-color: #f5f5f5;\n  padding: 10px;\n  border-radius: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.feature-label {\n  font-weight: bold;\n  color: #666;\n}\n\n.feature-value {\n  font-weight: bold;\n}\n\n.feature-value.high { color: #4CAF50; }\n.feature-value.medium { color: #ff9800; }\n.feature-value.low { color: #f44336; }\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}