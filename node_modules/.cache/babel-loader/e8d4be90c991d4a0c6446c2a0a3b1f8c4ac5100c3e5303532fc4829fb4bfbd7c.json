{"ast":null,"code":"export const products = {\n  'bottle-pet': {\n    name: 'Bouteille en PET',\n    image: 'https://via.placeholder.com/150',\n    score: 3,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PET'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Moyenne'\n    }, {\n      label: 'Temps de décomposition',\n      value: '450 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '1'\n    }],\n    alternatives: [{\n      name: 'Gourde en inox',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Réutilisable à vie, recyclable à 100%'\n    }, {\n      name: 'Bouteille en verre',\n      image: 'https://via.placeholder.com/150',\n      score: 8,\n      description: 'Recyclable à l\\'infini'\n    }]\n  },\n  'plastic-bag': {\n    name: 'Sac en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PE'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '400 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '4'\n    }],\n    alternatives: [{\n      name: 'Sac en tissu',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Réutilisable des centaines de fois'\n    }, {\n      name: 'Panier en osier',\n      image: 'https://via.placeholder.com/150',\n      score: 10,\n      description: '100% naturel et biodégradable'\n    }]\n  },\n  'plastic-container': {\n    name: 'Contenant alimentaire',\n    image: 'https://via.placeholder.com/150',\n    score: 4,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PP'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Bonne'\n    }, {\n      label: 'Temps de décomposition',\n      value: '500 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Moyen'\n    }, {\n      label: 'Code recyclage',\n      value: '5'\n    }],\n    alternatives: [{\n      name: 'Contenant en verre',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Réutilisable et recyclable'\n    }, {\n      name: 'Boîte en inox',\n      image: 'https://via.placeholder.com/150',\n      score: 10,\n      description: 'Durable et recyclable'\n    }]\n  },\n  'straw': {\n    name: 'Paille en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 1,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PP'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Très faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '200 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '5'\n    }],\n    alternatives: [{\n      name: 'Paille en inox',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Réutilisable et lavable'\n    }, {\n      name: 'Paille en bambou',\n      image: 'https://via.placeholder.com/150',\n      score: 10,\n      description: '100% biodégradable'\n    }]\n  },\n  'cutlery': {\n    name: 'Couverts en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PS'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '500 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '6'\n    }],\n    alternatives: [{\n      name: 'Couverts en inox',\n      image: 'https://via.placeholder.com/150',\n      score: 10,\n      description: 'Réutilisables à vie'\n    }, {\n      name: 'Couverts en bambou',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Biodégradables et compostables'\n    }]\n  },\n  'food-wrap': {\n    name: 'Film alimentaire',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PVC'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Très faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '1000 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '3'\n    }],\n    alternatives: [{\n      name: 'Bee\\'s Wrap',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'En cire d\\'abeille, réutilisable et compostable'\n    }, {\n      name: 'Bocaux en verre',\n      image: 'https://via.placeholder.com/150',\n      score: 10,\n      description: 'Réutilisables et recyclables'\n    }]\n  },\n  'shampoo-bottle': {\n    name: 'Flacon de shampooing',\n    image: 'https://via.placeholder.com/150',\n    score: 3,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'HDPE'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Bonne'\n    }, {\n      label: 'Temps de décomposition',\n      value: '450 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Moyen'\n    }, {\n      label: 'Code recyclage',\n      value: '2'\n    }],\n    alternatives: [{\n      name: 'Shampooing solide',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Sans emballage plastique'\n    }, {\n      name: 'Recharge en vrac',\n      image: 'https://via.placeholder.com/150',\n      score: 8,\n      description: 'Réduction des déchets d\\'emballage'\n    }]\n  }\n};\n\n// Fonction pour détecter les caractéristiques visuelles du plastique\nconst detectPlasticFeatures = imageData => {\n  // Dans une vraie application, on utiliserait une API de vision par ordinateur\n  // Pour la simulation, nous allons utiliser des caractéristiques typiques des images de plastique\n  const features = {\n    transparency: Math.random() > 0.5,\n    shine: Math.random() > 0.7,\n    color: Math.random() > 0.3 ? 'clair' : 'foncé',\n    shape: ['bouteille', 'sac', 'contenant', 'paille', 'couverts', 'film', 'flacon'][Math.floor(Math.random() * 7)]\n  };\n  return features;\n};\n\n// Fonction pour identifier le type de plastique\nconst identifyPlasticType = features => {\n  const productTypes = {\n    'bouteille': 'bottle-pet',\n    'sac': 'plastic-bag',\n    'contenant': 'plastic-container',\n    'paille': 'straw',\n    'couverts': 'cutlery',\n    'film': 'food-wrap',\n    'flacon': 'shampoo-bottle'\n  };\n  return productTypes[features.shape] || 'plastic-container';\n};\nexport const analyzeImage = async imageData => {\n  console.log('Début de l\\'analyse de l\\'image...');\n\n  // Simulation de l'analyse des caractéristiques visuelles\n  const features = detectPlasticFeatures(imageData);\n  console.log('Caractéristiques détectées:', features);\n\n  // Identification du type de plastique\n  const plasticType = identifyPlasticType(features);\n  console.log('Type de plastique identifié:', plasticType);\n\n  // Simulation d'un délai d'analyse\n  await new Promise(resolve => setTimeout(resolve, 2000));\n  return plasticType;\n};","map":{"version":3,"names":["products","name","image","score","impactDetails","label","value","alternatives","description","detectPlasticFeatures","imageData","features","transparency","Math","random","shine","color","shape","floor","identifyPlasticType","productTypes","analyzeImage","console","log","plasticType","Promise","resolve","setTimeout"],"sources":["/Users/cortex/Documents/Code/ecolo/src/data/products.js"],"sourcesContent":["export const products = {\n  'bottle-pet': {\n    name: 'Bouteille en PET',\n    image: 'https://via.placeholder.com/150',\n    score: 3,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PET' },\n      { label: 'Recyclabilité', value: 'Moyenne' },\n      { label: 'Temps de décomposition', value: '450 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '1' }\n    ],\n    alternatives: [\n      {\n        name: 'Gourde en inox',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Réutilisable à vie, recyclable à 100%'\n      },\n      {\n        name: 'Bouteille en verre',\n        image: 'https://via.placeholder.com/150',\n        score: 8,\n        description: 'Recyclable à l\\'infini'\n      }\n    ]\n  },\n  'plastic-bag': {\n    name: 'Sac en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PE' },\n      { label: 'Recyclabilité', value: 'Faible' },\n      { label: 'Temps de décomposition', value: '400 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '4' }\n    ],\n    alternatives: [\n      {\n        name: 'Sac en tissu',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Réutilisable des centaines de fois'\n      },\n      {\n        name: 'Panier en osier',\n        image: 'https://via.placeholder.com/150',\n        score: 10,\n        description: '100% naturel et biodégradable'\n      }\n    ]\n  },\n  'plastic-container': {\n    name: 'Contenant alimentaire',\n    image: 'https://via.placeholder.com/150',\n    score: 4,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PP' },\n      { label: 'Recyclabilité', value: 'Bonne' },\n      { label: 'Temps de décomposition', value: '500 ans' },\n      { label: 'Impact CO2', value: 'Moyen' },\n      { label: 'Code recyclage', value: '5' }\n    ],\n    alternatives: [\n      {\n        name: 'Contenant en verre',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Réutilisable et recyclable'\n      },\n      {\n        name: 'Boîte en inox',\n        image: 'https://via.placeholder.com/150',\n        score: 10,\n        description: 'Durable et recyclable'\n      }\n    ]\n  },\n  'straw': {\n    name: 'Paille en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 1,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PP' },\n      { label: 'Recyclabilité', value: 'Très faible' },\n      { label: 'Temps de décomposition', value: '200 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '5' }\n    ],\n    alternatives: [\n      {\n        name: 'Paille en inox',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Réutilisable et lavable'\n      },\n      {\n        name: 'Paille en bambou',\n        image: 'https://via.placeholder.com/150',\n        score: 10,\n        description: '100% biodégradable'\n      }\n    ]\n  },\n  'cutlery': {\n    name: 'Couverts en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PS' },\n      { label: 'Recyclabilité', value: 'Faible' },\n      { label: 'Temps de décomposition', value: '500 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '6' }\n    ],\n    alternatives: [\n      {\n        name: 'Couverts en inox',\n        image: 'https://via.placeholder.com/150',\n        score: 10,\n        description: 'Réutilisables à vie'\n      },\n      {\n        name: 'Couverts en bambou',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Biodégradables et compostables'\n      }\n    ]\n  },\n  'food-wrap': {\n    name: 'Film alimentaire',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PVC' },\n      { label: 'Recyclabilité', value: 'Très faible' },\n      { label: 'Temps de décomposition', value: '1000 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '3' }\n    ],\n    alternatives: [\n      {\n        name: 'Bee\\'s Wrap',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'En cire d\\'abeille, réutilisable et compostable'\n      },\n      {\n        name: 'Bocaux en verre',\n        image: 'https://via.placeholder.com/150',\n        score: 10,\n        description: 'Réutilisables et recyclables'\n      }\n    ]\n  },\n  'shampoo-bottle': {\n    name: 'Flacon de shampooing',\n    image: 'https://via.placeholder.com/150',\n    score: 3,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'HDPE' },\n      { label: 'Recyclabilité', value: 'Bonne' },\n      { label: 'Temps de décomposition', value: '450 ans' },\n      { label: 'Impact CO2', value: 'Moyen' },\n      { label: 'Code recyclage', value: '2' }\n    ],\n    alternatives: [\n      {\n        name: 'Shampooing solide',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Sans emballage plastique'\n      },\n      {\n        name: 'Recharge en vrac',\n        image: 'https://via.placeholder.com/150',\n        score: 8,\n        description: 'Réduction des déchets d\\'emballage'\n      }\n    ]\n  }\n};\n\n// Fonction pour détecter les caractéristiques visuelles du plastique\nconst detectPlasticFeatures = (imageData) => {\n  // Dans une vraie application, on utiliserait une API de vision par ordinateur\n  // Pour la simulation, nous allons utiliser des caractéristiques typiques des images de plastique\n  const features = {\n    transparency: Math.random() > 0.5,\n    shine: Math.random() > 0.7,\n    color: Math.random() > 0.3 ? 'clair' : 'foncé',\n    shape: ['bouteille', 'sac', 'contenant', 'paille', 'couverts', 'film', 'flacon'][Math.floor(Math.random() * 7)]\n  };\n  return features;\n};\n\n// Fonction pour identifier le type de plastique\nconst identifyPlasticType = (features) => {\n  const productTypes = {\n    'bouteille': 'bottle-pet',\n    'sac': 'plastic-bag',\n    'contenant': 'plastic-container',\n    'paille': 'straw',\n    'couverts': 'cutlery',\n    'film': 'food-wrap',\n    'flacon': 'shampoo-bottle'\n  };\n  \n  return productTypes[features.shape] || 'plastic-container';\n};\n\nexport const analyzeImage = async (imageData) => {\n  console.log('Début de l\\'analyse de l\\'image...');\n  \n  // Simulation de l'analyse des caractéristiques visuelles\n  const features = detectPlasticFeatures(imageData);\n  console.log('Caractéristiques détectées:', features);\n  \n  // Identification du type de plastique\n  const plasticType = identifyPlasticType(features);\n  console.log('Type de plastique identifié:', plasticType);\n  \n  // Simulation d'un délai d'analyse\n  await new Promise(resolve => setTimeout(resolve, 2000));\n  \n  return plasticType;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}