{"ast":null,"code":"import { products, analyzeImage } from './data/products';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      isDarkMode: false,\n      isScanning: false,\n      scanProgress: 0,\n      currentProduct: null\n    };\n  },\n  methods: {\n    toggleTheme() {\n      this.isDarkMode = !this.isDarkMode;\n    },\n    async startScanning() {\n      this.isScanning = true;\n      this.scanProgress = 0;\n      const progressInterval = setInterval(() => {\n        this.scanProgress += 5;\n        if (this.scanProgress >= 100) {\n          clearInterval(progressInterval);\n          this.simulateAnalysis();\n        }\n      }, 200);\n    },\n    async handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.isScanning = true;\n        this.scanProgress = 0;\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const imageData = e.target.result;\n          const progressInterval = setInterval(() => {\n            this.scanProgress += 5;\n            if (this.scanProgress >= 100) {\n              clearInterval(progressInterval);\n              this.analyzeUploadedImage(imageData);\n            }\n          }, 200);\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    async analyzeUploadedImage(imageData) {\n      try {\n        const result = await analyzeImage(imageData, products);\n        this.currentProduct = result;\n      } catch (error) {\n        console.error('Erreur lors de l\\'analyse:', error);\n      } finally {\n        this.isScanning = false;\n        this.scanProgress = 0;\n      }\n    },\n    simulateAnalysis() {\n      const randomIndex = Math.floor(Math.random() * Object.keys(products).length);\n      const productKey = Object.keys(products)[randomIndex];\n      this.currentProduct = products[productKey];\n      this.isScanning = false;\n    },\n    resetAnalysis() {\n      this.currentProduct = null;\n    },\n    getScoreClass(score) {\n      if (score >= 8) return 'score-high';\n      if (score >= 5) return 'score-medium';\n      return 'score-low';\n    }\n  }\n};","map":{"version":3,"names":["products","analyzeImage","name","data","isDarkMode","isScanning","scanProgress","currentProduct","methods","toggleTheme","startScanning","progressInterval","setInterval","clearInterval","simulateAnalysis","handleImageUpload","event","file","target","files","reader","FileReader","onload","e","imageData","result","analyzeUploadedImage","readAsDataURL","error","console","randomIndex","Math","floor","random","Object","keys","length","productKey","resetAnalysis","getScoreClass","score"],"sources":["/Users/cortex/Documents/Code/ecolo/src/App.vue"],"sourcesContent":["<template>\n  <div :class=\"['app', { 'dark-mode': isDarkMode }]\">\n    <header class=\"app-header\">\n      <h1>EcoScan</h1>\n      <button @click=\"toggleTheme\" class=\"theme-toggle\">\n        {{ isDarkMode ? '‚òÄÔ∏è' : 'üåô' }}\n      </button>\n    </header>\n\n    <main class=\"app-content\">\n      <div v-if=\"!currentProduct\" class=\"scan-section\">\n        <button @click=\"startScanning\" class=\"scan-button\">\n          Scanner un produit\n        </button>\n        <div class=\"or-divider\">ou</div>\n        <div class=\"upload-section\">\n          <input type=\"file\" id=\"image-upload\" accept=\"image/*\" @change=\"handleImageUpload\" class=\"file-input\">\n          <label for=\"image-upload\" class=\"upload-button\">\n            Importer une image\n          </label>\n        </div>\n      </div>\n\n      <div v-else class=\"product-section\">\n        <div class=\"product-card\">\n          <div class=\"product-header\">\n            <h2>{{ currentProduct.name }}</h2>\n            <button @click=\"resetAnalysis\" class=\"close-button\">√ó</button>\n          </div>\n          \n          <div class=\"product-content\">\n            <div class=\"product-image\">\n              <img :src=\"currentProduct.image\" :alt=\"currentProduct.name\">\n            </div>\n            \n            <div class=\"product-details\">\n              <div class=\"impact-score\">\n                <div :class=\"['score-circle', getScoreClass(currentProduct.score)]\">\n                  {{ currentProduct.score }}/10\n                </div>\n                <span>Score environnemental</span>\n              </div>\n\n              <div class=\"impact-details\">\n                <h3>Impact environnemental</h3>\n                <ul>\n                  <li v-for=\"(detail, index) in currentProduct.impactDetails\" :key=\"index\">\n                    <strong>{{ detail.label }}:</strong> {{ detail.value }}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"alternatives-section\">\n            <h3>Alternatives √©cologiques</h3>\n            <div class=\"alternatives-grid\">\n              <div v-for=\"(alternative, index) in currentProduct.alternatives\" :key=\"index\" class=\"alternative-card\">\n                <div class=\"alternative-image\">\n                  <img :src=\"alternative.image\" :alt=\"alternative.name\">\n                </div>\n                <div class=\"alternative-info\">\n                  <h4>{{ alternative.name }}</h4>\n                  <div :class=\"['score-circle', getScoreClass(alternative.score)]\">\n                    {{ alternative.score }}/10\n                  </div>\n                  <p>{{ alternative.description }}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"isScanning\" class=\"scanning-overlay\">\n        <div class=\"scanning-content\">\n          <p>Analyse en cours...</p>\n          <div class=\"progress-bar\">\n            <div class=\"progress\" :style=\"{ width: `${scanProgress}%` }\"></div>\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport { products, analyzeImage } from './data/products';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      isDarkMode: false,\n      isScanning: false,\n      scanProgress: 0,\n      currentProduct: null\n    };\n  },\n  methods: {\n    toggleTheme() {\n      this.isDarkMode = !this.isDarkMode;\n    },\n    async startScanning() {\n      this.isScanning = true;\n      this.scanProgress = 0;\n      \n      const progressInterval = setInterval(() => {\n        this.scanProgress += 5;\n        if (this.scanProgress >= 100) {\n          clearInterval(progressInterval);\n          this.simulateAnalysis();\n        }\n      }, 200);\n    },\n    async handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.isScanning = true;\n        this.scanProgress = 0;\n        \n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          const imageData = e.target.result;\n          \n          const progressInterval = setInterval(() => {\n            this.scanProgress += 5;\n            if (this.scanProgress >= 100) {\n              clearInterval(progressInterval);\n              this.analyzeUploadedImage(imageData);\n            }\n          }, 200);\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    async analyzeUploadedImage(imageData) {\n      try {\n        const result = await analyzeImage(imageData, products);\n        this.currentProduct = result;\n      } catch (error) {\n        console.error('Erreur lors de l\\'analyse:', error);\n      } finally {\n        this.isScanning = false;\n        this.scanProgress = 0;\n      }\n    },\n    simulateAnalysis() {\n      const randomIndex = Math.floor(Math.random() * Object.keys(products).length);\n      const productKey = Object.keys(products)[randomIndex];\n      this.currentProduct = products[productKey];\n      this.isScanning = false;\n    },\n    resetAnalysis() {\n      this.currentProduct = null;\n    },\n    getScoreClass(score) {\n      if (score >= 8) return 'score-high';\n      if (score >= 5) return 'score-medium';\n      return 'score-low';\n    }\n  }\n};\n</script>\n\n<style>\n:root {\n  --primary-color: #4CAF50;\n  --text-primary: #333;\n  --background: #fff;\n  --card-background: #f5f5f5;\n  --border-color: #ddd;\n}\n\n.dark-mode {\n  --text-primary: #fff;\n  --background: #1a1a1a;\n  --card-background: #2d2d2d;\n  --border-color: #444;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: Arial, sans-serif;\n  background-color: var(--background);\n  color: var(--text-primary);\n}\n\n.app {\n  min-height: 100vh;\n}\n\n.app-header {\n  background-color: var(--primary-color);\n  color: white;\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.theme-toggle {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 1.5rem;\n  cursor: pointer;\n}\n\n.app-content {\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.scan-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  margin-top: 2rem;\n}\n\n.scan-button, .upload-button {\n  padding: 1rem 2rem;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 1rem;\n  width: 100%;\n  max-width: 300px;\n}\n\n.scan-button {\n  background-color: var(--primary-color);\n  color: white;\n}\n\n.upload-button {\n  background-color: var(--card-background);\n  color: var(--text-primary);\n  border: 2px dashed var(--border-color);\n}\n\n.file-input {\n  display: none;\n}\n\n.or-divider {\n  color: var(--text-primary);\n  margin: 1rem 0;\n}\n\n.product-card {\n  background-color: var(--card-background);\n  border-radius: 10px;\n  padding: 1.5rem;\n  margin-top: 2rem;\n}\n\n.product-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  color: var(--text-primary);\n}\n\n.product-content {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  margin-bottom: 2rem;\n}\n\n.product-image img {\n  width: 100%;\n  border-radius: 5px;\n}\n\n.impact-score {\n  text-align: center;\n  margin-bottom: 1.5rem;\n}\n\n.score-circle {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto 0.5rem;\n  color: white;\n  font-weight: bold;\n}\n\n.score-high { background-color: #4CAF50; }\n.score-medium { background-color: #FFC107; }\n.score-low { background-color: #F44336; }\n\n.impact-details ul {\n  list-style: none;\n}\n\n.impact-details li {\n  margin-bottom: 0.5rem;\n  padding: 0.5rem;\n  background-color: var(--background);\n  border-radius: 5px;\n}\n\n.alternatives-section {\n  margin-top: 2rem;\n}\n\n.alternatives-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-top: 1rem;\n}\n\n.alternative-card {\n  background-color: var(--background);\n  border-radius: 5px;\n  overflow: hidden;\n}\n\n.alternative-image img {\n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n}\n\n.alternative-info {\n  padding: 1rem;\n}\n\n.scanning-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.scanning-content {\n  background-color: var(--card-background);\n  padding: 2rem;\n  border-radius: 10px;\n  text-align: center;\n}\n\n.progress-bar {\n  height: 4px;\n  background-color: var(--border-color);\n  border-radius: 2px;\n  margin-top: 1rem;\n  overflow: hidden;\n}\n\n.progress {\n  height: 100%;\n  background-color: var(--primary-color);\n  transition: width 0.2s;\n}\n\n@media (max-width: 768px) {\n  .product-content {\n    grid-template-columns: 1fr;\n  }\n  \n  .app-content {\n    padding: 1rem;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}