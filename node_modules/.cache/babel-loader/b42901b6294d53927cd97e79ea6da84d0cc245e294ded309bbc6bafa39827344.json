{"ast":null,"code":"// Base de données des produits plastiques\nconst products = {\n  'bottle-pet': {\n    name: 'Bouteille en PET',\n    image: 'https://example.com/bottle-pet.jpg',\n    score: 4,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PET (Polyéthylène téréphtalate)'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Élevée'\n    }, {\n      label: 'Temps de décomposition',\n      value: '450 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Moyen'\n    }, {\n      label: 'Code recyclage',\n      value: '1'\n    }],\n    alternatives: [{\n      name: 'Gourde en inox',\n      image: 'https://example.com/stainless-bottle.jpg',\n      score: 9,\n      description: 'Réutilisable, durable et sans BPA'\n    }, {\n      name: 'Bouteille en verre',\n      image: 'https://example.com/glass-bottle.jpg',\n      score: 8,\n      description: '100% recyclable et sans produits chimiques'\n    }]\n  },\n  'plastic-bag': {\n    name: 'Sac plastique',\n    image: 'https://example.com/plastic-bag.jpg',\n    score: 2,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'Polyéthylène'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '1000 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '4'\n    }],\n    alternatives: [{\n      name: 'Sac en tissu',\n      image: 'https://example.com/cotton-bag.jpg',\n      score: 9,\n      description: 'Réutilisable et biodégradable'\n    }, {\n      name: 'Panier en osier',\n      image: 'https://example.com/basket.jpg',\n      score: 10,\n      description: 'Naturel et durable'\n    }]\n  },\n  'plastic-container': {\n    name: 'Contenant alimentaire',\n    image: 'https://example.com/plastic-container.jpg',\n    score: 3,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'Polypropylène'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Moyenne'\n    }, {\n      label: 'Temps de décomposition',\n      value: '500 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Moyen'\n    }, {\n      label: 'Code recyclage',\n      value: '5'\n    }],\n    alternatives: [{\n      name: 'Boîte en verre',\n      image: 'https://example.com/glass-container.jpg',\n      score: 9,\n      description: 'Réutilisable et sans produits chimiques'\n    }, {\n      name: 'Contenant en inox',\n      image: 'https://example.com/stainless-container.jpg',\n      score: 10,\n      description: 'Durable et sans danger pour la santé'\n    }]\n  },\n  'straw': {\n    name: 'Paille en plastique',\n    image: 'https://example.com/straw.jpg',\n    score: 1,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'Polypropylène'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '450 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '5'\n    }],\n    alternatives: [{\n      name: 'Paille en inox',\n      image: 'https://example.com/stainless-straw.jpg',\n      score: 9,\n      description: 'Réutilisable et durable'\n    }, {\n      name: 'Paille en bambou',\n      image: 'https://example.com/bamboo-straw.jpg',\n      score: 8,\n      description: 'Naturelle et biodégradable'\n    }]\n  },\n  'cutlery': {\n    name: 'Couverts en plastique',\n    image: 'https://example.com/cutlery.jpg',\n    score: 2,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'Polystyrène'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '500 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '6'\n    }],\n    alternatives: [{\n      name: 'Couverts en inox',\n      image: 'https://example.com/stainless-cutlery.jpg',\n      score: 10,\n      description: 'Réutilisables et durables'\n    }, {\n      name: 'Couverts en bambou',\n      image: 'https://example.com/bamboo-cutlery.jpg',\n      score: 9,\n      description: 'Naturels et biodégradables'\n    }]\n  },\n  'food-wrap': {\n    name: 'Film alimentaire',\n    image: 'https://example.com/food-wrap.jpg',\n    score: 2,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'Polyéthylène'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '450 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '4'\n    }],\n    alternatives: [{\n      name: 'Bee\\'s Wrap',\n      image: 'https://example.com/bees-wrap.jpg',\n      score: 9,\n      description: 'Naturel et réutilisable'\n    }, {\n      name: 'Boîtes en verre',\n      image: 'https://example.com/glass-boxes.jpg',\n      score: 10,\n      description: 'Réutilisables et sans danger'\n    }]\n  },\n  'shampoo-bottle': {\n    name: 'Bouteille de shampoing',\n    image: 'https://example.com/shampoo-bottle.jpg',\n    score: 3,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'HDPE'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Moyenne'\n    }, {\n      label: 'Temps de décomposition',\n      value: '500 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Moyen'\n    }, {\n      label: 'Code recyclage',\n      value: '2'\n    }],\n    alternatives: [{\n      name: 'Shampoing solide',\n      image: 'https://example.com/solid-shampoo.jpg',\n      score: 9,\n      description: 'Sans emballage plastique'\n    }, {\n      name: 'Recharge en vrac',\n      image: 'https://example.com/bulk-refill.jpg',\n      score: 8,\n      description: 'Réduction des déchets'\n    }]\n  },\n  'scanner': {\n    name: 'Scanner EcoScan',\n    image: 'https://example.com/scanner.jpg',\n    score: 8,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'Électronique'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Élevée'\n    }, {\n      label: 'Temps de décomposition',\n      value: 'Non applicable'\n    }, {\n      label: 'Impact CO2',\n      value: 'Faible'\n    }, {\n      label: 'Code recyclage',\n      value: 'WEEE'\n    }],\n    alternatives: [{\n      name: 'Application mobile',\n      image: 'https://example.com/mobile-app.jpg',\n      score: 9,\n      description: 'Solution sans matériel supplémentaire'\n    }, {\n      name: 'Scanner portable',\n      image: 'https://example.com/portable-scanner.jpg',\n      score: 7,\n      description: 'Version plus compacte et économe en énergie'\n    }]\n  }\n};\n\n// Caractéristiques visuelles pour l'identification\nconst possibleFeatures = {\n  'bottle-pet': {\n    shape: 'cylindrique',\n    transparency: 0.8,\n    shine: 0.7,\n    color: ['clair', 'transparent'],\n    texture: 'lisse',\n    weight: 0.3\n  },\n  'plastic-bag': {\n    shape: 'plat',\n    transparency: 0.6,\n    shine: 0.4,\n    color: ['transparent', 'clair'],\n    texture: 'fin',\n    weight: 0.1\n  },\n  'plastic-container': {\n    shape: 'rectangulaire',\n    transparency: 0.5,\n    shine: 0.6,\n    color: ['clair', 'opaque'],\n    texture: 'rigide',\n    weight: 0.4\n  },\n  'straw': {\n    shape: 'cylindrique',\n    transparency: 0.7,\n    shine: 0.5,\n    color: ['clair', 'transparent'],\n    texture: 'lisse',\n    weight: 0.05\n  },\n  'cutlery': {\n    shape: 'allongé',\n    transparency: 0.3,\n    shine: 0.8,\n    color: ['clair', 'opaque'],\n    texture: 'rigide',\n    weight: 0.2\n  },\n  'food-wrap': {\n    shape: 'plat',\n    transparency: 0.9,\n    shine: 0.3,\n    color: ['transparent'],\n    texture: 'fin',\n    weight: 0.1\n  },\n  'shampoo-bottle': {\n    shape: 'cylindrique',\n    transparency: 0.4,\n    shine: 0.6,\n    color: ['opaque', 'coloré'],\n    texture: 'rigide',\n    weight: 0.3\n  }\n};\n\n// Fonction pour générer un nombre pseudo-aléatoire basé sur une graine\nfunction seededRandom(seed) {\n  const x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\n\n// Fonction pour détecter les caractéristiques visuelles d'une image\nfunction detectVisualFeatures(imageData) {\n  // Créer une graine basée sur les premiers caractères de l'image\n  const seed = imageData.substring(0, 20).split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n\n  // Sélectionner aléatoirement un type de produit\n  const productTypes = Object.keys(possibleFeatures);\n  const randomIndex = Math.floor(seededRandom(seed) * productTypes.length);\n  const selectedType = productTypes[randomIndex];\n\n  // Obtenir les caractéristiques de base\n  const baseFeatures = possibleFeatures[selectedType];\n\n  // Ajouter des variations aléatoires\n  const features = {\n    ...baseFeatures,\n    transparency: baseFeatures.transparency + (seededRandom(seed + 1) * 0.2 - 0.1),\n    shine: baseFeatures.shine + (seededRandom(seed + 2) * 0.2 - 0.1),\n    confidence: Math.floor(seededRandom(seed + 3) * 30 + 70) // Confiance entre 70% et 100%\n  };\n  return {\n    features,\n    productType: selectedType\n  };\n}\n\n// Fonction pour identifier le type de produit\nfunction identifyProductType(features) {\n  const {\n    features: detectedFeatures,\n    productType\n  } = features;\n\n  // Calculer la confiance en fonction des caractéristiques détectées\n  const confidence = detectedFeatures.confidence;\n  return {\n    productId: productType,\n    confidence: confidence\n  };\n}\n\n// Fonction pour calculer le score environnemental\nfunction calculateEnvironmentalScore(product) {\n  return product.score;\n}\n\n// Fonction principale d'analyse d'image\nasync function analyzeImage(imageData) {\n  console.log('Analyse de l\\'image en cours...');\n  try {\n    // Détecter les caractéristiques visuelles\n    const visualFeatures = detectVisualFeatures(imageData);\n    console.log('Caractéristiques détectées:', visualFeatures.features);\n\n    // Identifier le type de produit\n    const identification = identifyProductType(visualFeatures);\n    console.log('Produit identifié:', identification);\n\n    // Vérifier si le produit existe dans la base de données\n    if (!products[identification.productId]) {\n      console.warn('Produit non trouvé, utilisation du produit par défaut');\n      identification.productId = 'plastic-container';\n    }\n\n    // Calculer le score environnemental\n    const product = products[identification.productId];\n    const score = calculateEnvironmentalScore(product);\n    console.log('Score environnemental calculé:', score);\n    return {\n      productId: identification.productId,\n      confidence: identification.confidence,\n      features: visualFeatures.features,\n      score: score\n    };\n  } catch (error) {\n    console.error('Erreur lors de l\\'analyse:', error);\n    // Retourner un produit par défaut en cas d'erreur\n    return {\n      productId: 'plastic-container',\n      confidence: 50,\n      features: {\n        shape: 'rectangulaire',\n        transparency: 0.5,\n        shine: 0.6,\n        color: 'clair',\n        texture: 'rigide'\n      },\n      score: 3\n    };\n  }\n}\nexport { analyzeImage };\nexport default products;","map":{"version":3,"names":["products","name","image","score","impactDetails","label","value","alternatives","description","possibleFeatures","shape","transparency","shine","color","texture","weight","seededRandom","seed","x","Math","sin","floor","detectVisualFeatures","imageData","substring","split","reduce","acc","char","charCodeAt","productTypes","Object","keys","randomIndex","length","selectedType","baseFeatures","features","confidence","productType","identifyProductType","detectedFeatures","productId","calculateEnvironmentalScore","product","analyzeImage","console","log","visualFeatures","identification","warn","error"],"sources":["/Users/cortex/Documents/Code/ecolo/src/data/products.js"],"sourcesContent":["// Base de données des produits plastiques\nconst products = {\n  'bottle-pet': {\n    name: 'Bouteille en PET',\n    image: 'https://example.com/bottle-pet.jpg',\n    score: 4,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PET (Polyéthylène téréphtalate)' },\n      { label: 'Recyclabilité', value: 'Élevée' },\n      { label: 'Temps de décomposition', value: '450 ans' },\n      { label: 'Impact CO2', value: 'Moyen' },\n      { label: 'Code recyclage', value: '1' }\n    ],\n    alternatives: [\n      {\n        name: 'Gourde en inox',\n        image: 'https://example.com/stainless-bottle.jpg',\n        score: 9,\n        description: 'Réutilisable, durable et sans BPA'\n      },\n      {\n        name: 'Bouteille en verre',\n        image: 'https://example.com/glass-bottle.jpg',\n        score: 8,\n        description: '100% recyclable et sans produits chimiques'\n      }\n    ]\n  },\n  'plastic-bag': {\n    name: 'Sac plastique',\n    image: 'https://example.com/plastic-bag.jpg',\n    score: 2,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'Polyéthylène' },\n      { label: 'Recyclabilité', value: 'Faible' },\n      { label: 'Temps de décomposition', value: '1000 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '4' }\n    ],\n    alternatives: [\n      {\n        name: 'Sac en tissu',\n        image: 'https://example.com/cotton-bag.jpg',\n        score: 9,\n        description: 'Réutilisable et biodégradable'\n      },\n      {\n        name: 'Panier en osier',\n        image: 'https://example.com/basket.jpg',\n        score: 10,\n        description: 'Naturel et durable'\n      }\n    ]\n  },\n  'plastic-container': {\n    name: 'Contenant alimentaire',\n    image: 'https://example.com/plastic-container.jpg',\n    score: 3,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'Polypropylène' },\n      { label: 'Recyclabilité', value: 'Moyenne' },\n      { label: 'Temps de décomposition', value: '500 ans' },\n      { label: 'Impact CO2', value: 'Moyen' },\n      { label: 'Code recyclage', value: '5' }\n    ],\n    alternatives: [\n      {\n        name: 'Boîte en verre',\n        image: 'https://example.com/glass-container.jpg',\n        score: 9,\n        description: 'Réutilisable et sans produits chimiques'\n      },\n      {\n        name: 'Contenant en inox',\n        image: 'https://example.com/stainless-container.jpg',\n        score: 10,\n        description: 'Durable et sans danger pour la santé'\n      }\n    ]\n  },\n  'straw': {\n    name: 'Paille en plastique',\n    image: 'https://example.com/straw.jpg',\n    score: 1,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'Polypropylène' },\n      { label: 'Recyclabilité', value: 'Faible' },\n      { label: 'Temps de décomposition', value: '450 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '5' }\n    ],\n    alternatives: [\n      {\n        name: 'Paille en inox',\n        image: 'https://example.com/stainless-straw.jpg',\n        score: 9,\n        description: 'Réutilisable et durable'\n      },\n      {\n        name: 'Paille en bambou',\n        image: 'https://example.com/bamboo-straw.jpg',\n        score: 8,\n        description: 'Naturelle et biodégradable'\n      }\n    ]\n  },\n  'cutlery': {\n    name: 'Couverts en plastique',\n    image: 'https://example.com/cutlery.jpg',\n    score: 2,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'Polystyrène' },\n      { label: 'Recyclabilité', value: 'Faible' },\n      { label: 'Temps de décomposition', value: '500 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '6' }\n    ],\n    alternatives: [\n      {\n        name: 'Couverts en inox',\n        image: 'https://example.com/stainless-cutlery.jpg',\n        score: 10,\n        description: 'Réutilisables et durables'\n      },\n      {\n        name: 'Couverts en bambou',\n        image: 'https://example.com/bamboo-cutlery.jpg',\n        score: 9,\n        description: 'Naturels et biodégradables'\n      }\n    ]\n  },\n  'food-wrap': {\n    name: 'Film alimentaire',\n    image: 'https://example.com/food-wrap.jpg',\n    score: 2,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'Polyéthylène' },\n      { label: 'Recyclabilité', value: 'Faible' },\n      { label: 'Temps de décomposition', value: '450 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '4' }\n    ],\n    alternatives: [\n      {\n        name: 'Bee\\'s Wrap',\n        image: 'https://example.com/bees-wrap.jpg',\n        score: 9,\n        description: 'Naturel et réutilisable'\n      },\n      {\n        name: 'Boîtes en verre',\n        image: 'https://example.com/glass-boxes.jpg',\n        score: 10,\n        description: 'Réutilisables et sans danger'\n      }\n    ]\n  },\n  'shampoo-bottle': {\n    name: 'Bouteille de shampoing',\n    image: 'https://example.com/shampoo-bottle.jpg',\n    score: 3,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'HDPE' },\n      { label: 'Recyclabilité', value: 'Moyenne' },\n      { label: 'Temps de décomposition', value: '500 ans' },\n      { label: 'Impact CO2', value: 'Moyen' },\n      { label: 'Code recyclage', value: '2' }\n    ],\n    alternatives: [\n      {\n        name: 'Shampoing solide',\n        image: 'https://example.com/solid-shampoo.jpg',\n        score: 9,\n        description: 'Sans emballage plastique'\n      },\n      {\n        name: 'Recharge en vrac',\n        image: 'https://example.com/bulk-refill.jpg',\n        score: 8,\n        description: 'Réduction des déchets'\n      }\n    ]\n  },\n  'scanner': {\n    name: 'Scanner EcoScan',\n    image: 'https://example.com/scanner.jpg',\n    score: 8,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'Électronique' },\n      { label: 'Recyclabilité', value: 'Élevée' },\n      { label: 'Temps de décomposition', value: 'Non applicable' },\n      { label: 'Impact CO2', value: 'Faible' },\n      { label: 'Code recyclage', value: 'WEEE' }\n    ],\n    alternatives: [\n      {\n        name: 'Application mobile',\n        image: 'https://example.com/mobile-app.jpg',\n        score: 9,\n        description: 'Solution sans matériel supplémentaire'\n      },\n      {\n        name: 'Scanner portable',\n        image: 'https://example.com/portable-scanner.jpg',\n        score: 7,\n        description: 'Version plus compacte et économe en énergie'\n      }\n    ]\n  }\n};\n\n// Caractéristiques visuelles pour l'identification\nconst possibleFeatures = {\n  'bottle-pet': {\n    shape: 'cylindrique',\n    transparency: 0.8,\n    shine: 0.7,\n    color: ['clair', 'transparent'],\n    texture: 'lisse',\n    weight: 0.3\n  },\n  'plastic-bag': {\n    shape: 'plat',\n    transparency: 0.6,\n    shine: 0.4,\n    color: ['transparent', 'clair'],\n    texture: 'fin',\n    weight: 0.1\n  },\n  'plastic-container': {\n    shape: 'rectangulaire',\n    transparency: 0.5,\n    shine: 0.6,\n    color: ['clair', 'opaque'],\n    texture: 'rigide',\n    weight: 0.4\n  },\n  'straw': {\n    shape: 'cylindrique',\n    transparency: 0.7,\n    shine: 0.5,\n    color: ['clair', 'transparent'],\n    texture: 'lisse',\n    weight: 0.05\n  },\n  'cutlery': {\n    shape: 'allongé',\n    transparency: 0.3,\n    shine: 0.8,\n    color: ['clair', 'opaque'],\n    texture: 'rigide',\n    weight: 0.2\n  },\n  'food-wrap': {\n    shape: 'plat',\n    transparency: 0.9,\n    shine: 0.3,\n    color: ['transparent'],\n    texture: 'fin',\n    weight: 0.1\n  },\n  'shampoo-bottle': {\n    shape: 'cylindrique',\n    transparency: 0.4,\n    shine: 0.6,\n    color: ['opaque', 'coloré'],\n    texture: 'rigide',\n    weight: 0.3\n  }\n};\n\n// Fonction pour générer un nombre pseudo-aléatoire basé sur une graine\nfunction seededRandom(seed) {\n  const x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\n\n// Fonction pour détecter les caractéristiques visuelles d'une image\nfunction detectVisualFeatures(imageData) {\n  // Créer une graine basée sur les premiers caractères de l'image\n  const seed = imageData.substring(0, 20).split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  \n  // Sélectionner aléatoirement un type de produit\n  const productTypes = Object.keys(possibleFeatures);\n  const randomIndex = Math.floor(seededRandom(seed) * productTypes.length);\n  const selectedType = productTypes[randomIndex];\n  \n  // Obtenir les caractéristiques de base\n  const baseFeatures = possibleFeatures[selectedType];\n  \n  // Ajouter des variations aléatoires\n  const features = {\n    ...baseFeatures,\n    transparency: baseFeatures.transparency + (seededRandom(seed + 1) * 0.2 - 0.1),\n    shine: baseFeatures.shine + (seededRandom(seed + 2) * 0.2 - 0.1),\n    confidence: Math.floor(seededRandom(seed + 3) * 30 + 70) // Confiance entre 70% et 100%\n  };\n\n  return {\n    features,\n    productType: selectedType\n  };\n}\n\n// Fonction pour identifier le type de produit\nfunction identifyProductType(features) {\n  const { features: detectedFeatures, productType } = features;\n  \n  // Calculer la confiance en fonction des caractéristiques détectées\n  const confidence = detectedFeatures.confidence;\n  \n  return {\n    productId: productType,\n    confidence: confidence\n  };\n}\n\n// Fonction pour calculer le score environnemental\nfunction calculateEnvironmentalScore(product) {\n  return product.score;\n}\n\n// Fonction principale d'analyse d'image\nasync function analyzeImage(imageData) {\n  console.log('Analyse de l\\'image en cours...');\n  \n  try {\n    // Détecter les caractéristiques visuelles\n    const visualFeatures = detectVisualFeatures(imageData);\n    console.log('Caractéristiques détectées:', visualFeatures.features);\n    \n    // Identifier le type de produit\n    const identification = identifyProductType(visualFeatures);\n    console.log('Produit identifié:', identification);\n    \n    // Vérifier si le produit existe dans la base de données\n    if (!products[identification.productId]) {\n      console.warn('Produit non trouvé, utilisation du produit par défaut');\n      identification.productId = 'plastic-container';\n    }\n    \n    // Calculer le score environnemental\n    const product = products[identification.productId];\n    const score = calculateEnvironmentalScore(product);\n    console.log('Score environnemental calculé:', score);\n    \n    return {\n      productId: identification.productId,\n      confidence: identification.confidence,\n      features: visualFeatures.features,\n      score: score\n    };\n  } catch (error) {\n    console.error('Erreur lors de l\\'analyse:', error);\n    // Retourner un produit par défaut en cas d'erreur\n    return {\n      productId: 'plastic-container',\n      confidence: 50,\n      features: {\n        shape: 'rectangulaire',\n        transparency: 0.5,\n        shine: 0.6,\n        color: 'clair',\n        texture: 'rigide'\n      },\n      score: 3\n    };\n  }\n}\n\nexport { analyzeImage };\nexport default products; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}