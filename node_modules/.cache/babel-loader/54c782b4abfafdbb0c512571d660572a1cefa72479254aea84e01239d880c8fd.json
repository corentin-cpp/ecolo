{"ast":null,"code":"// Base de données des produits plastiques\nconst products = {\n  'bottle-pet': {\n    name: 'Bouteille en PET',\n    image: 'https://example.com/bottle-pet.jpg',\n    score: 4,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PET (Polyéthylène téréphtalate)'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Élevée'\n    }, {\n      label: 'Temps de décomposition',\n      value: '450 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Moyen'\n    }, {\n      label: 'Code recyclage',\n      value: '1'\n    }],\n    alternatives: [{\n      name: 'Gourde en inox',\n      image: 'https://example.com/stainless-bottle.jpg',\n      score: 9,\n      description: 'Réutilisable, durable et sans BPA'\n    }, {\n      name: 'Bouteille en verre',\n      image: 'https://example.com/glass-bottle.jpg',\n      score: 8,\n      description: '100% recyclable et sans produits chimiques'\n    }]\n  },\n  'plastic-bag': {\n    name: 'Sac en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PE'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '400 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '4'\n    }],\n    alternatives: [{\n      name: 'Sac en tissu',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Réutilisable des centaines de fois'\n    }, {\n      name: 'Panier en osier',\n      image: 'https://via.placeholder.com/150',\n      score: 10,\n      description: '100% naturel et biodégradable'\n    }]\n  },\n  'plastic-container': {\n    name: 'Contenant alimentaire',\n    image: 'https://via.placeholder.com/150',\n    score: 4,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PP'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Bonne'\n    }, {\n      label: 'Temps de décomposition',\n      value: '500 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Moyen'\n    }, {\n      label: 'Code recyclage',\n      value: '5'\n    }],\n    alternatives: [{\n      name: 'Contenant en verre',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Réutilisable et recyclable'\n    }, {\n      name: 'Boîte en inox',\n      image: 'https://via.placeholder.com/150',\n      score: 10,\n      description: 'Durable et recyclable'\n    }]\n  },\n  'straw': {\n    name: 'Paille en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 1,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PP'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Très faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '200 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '5'\n    }],\n    alternatives: [{\n      name: 'Paille en inox',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Réutilisable et lavable'\n    }, {\n      name: 'Paille en bambou',\n      image: 'https://via.placeholder.com/150',\n      score: 10,\n      description: '100% biodégradable'\n    }]\n  },\n  'cutlery': {\n    name: 'Couverts en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PS'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '500 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '6'\n    }],\n    alternatives: [{\n      name: 'Couverts en inox',\n      image: 'https://via.placeholder.com/150',\n      score: 10,\n      description: 'Réutilisables à vie'\n    }, {\n      name: 'Couverts en bambou',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Biodégradables et compostables'\n    }]\n  },\n  'food-wrap': {\n    name: 'Film alimentaire',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PVC'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Très faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '1000 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }, {\n      label: 'Code recyclage',\n      value: '3'\n    }],\n    alternatives: [{\n      name: 'Bee\\'s Wrap',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'En cire d\\'abeille, réutilisable et compostable'\n    }, {\n      name: 'Bocaux en verre',\n      image: 'https://via.placeholder.com/150',\n      score: 10,\n      description: 'Réutilisables et recyclables'\n    }]\n  },\n  'shampoo-bottle': {\n    name: 'Flacon de shampooing',\n    image: 'https://via.placeholder.com/150',\n    score: 3,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'HDPE'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Bonne'\n    }, {\n      label: 'Temps de décomposition',\n      value: '450 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Moyen'\n    }, {\n      label: 'Code recyclage',\n      value: '2'\n    }],\n    alternatives: [{\n      name: 'Shampooing solide',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Sans emballage plastique'\n    }, {\n      name: 'Recharge en vrac',\n      image: 'https://via.placeholder.com/150',\n      score: 8,\n      description: 'Réduction des déchets d\\'emballage'\n    }]\n  }\n};\n\n// Caractéristiques visuelles pour l'identification\nconst visualFeatures = {\n  'bottle-pet': {\n    shape: 'cylindrique',\n    transparency: 0.8,\n    shine: 0.7,\n    color: ['clair', 'transparent'],\n    texture: 'lisse',\n    weight: 0.3\n  },\n  'plastic-bag': {\n    shape: 'plat',\n    transparency: 0.6,\n    shine: 0.4,\n    color: ['transparent', 'clair'],\n    texture: 'fin',\n    weight: 0.1\n  },\n  'plastic-container': {\n    shape: 'rectangulaire',\n    transparency: 0.5,\n    shine: 0.6,\n    color: ['clair', 'opaque'],\n    texture: 'rigide',\n    weight: 0.4\n  },\n  'straw': {\n    shape: 'cylindrique',\n    transparency: 0.7,\n    shine: 0.5,\n    color: ['clair', 'transparent'],\n    texture: 'lisse',\n    weight: 0.05\n  },\n  'cutlery': {\n    shape: 'allongé',\n    transparency: 0.3,\n    shine: 0.8,\n    color: ['clair', 'opaque'],\n    texture: 'rigide',\n    weight: 0.2\n  },\n  'food-wrap': {\n    shape: 'plat',\n    transparency: 0.9,\n    shine: 0.3,\n    color: ['transparent'],\n    texture: 'fin',\n    weight: 0.1\n  },\n  'shampoo-bottle': {\n    shape: 'cylindrique',\n    transparency: 0.4,\n    shine: 0.6,\n    color: ['opaque', 'coloré'],\n    texture: 'rigide',\n    weight: 0.3\n  }\n};\n\n// Fonction pour calculer le score environnemental\nfunction calculateEnvironmentalScore(product) {\n  let score = 10;\n\n  // Pénalités basées sur les caractéristiques\n  const impactFactors = {\n    recyclability: {\n      'Élevée': 0,\n      'Moyenne': -2,\n      'Faible': -4\n    },\n    decompositionTime: {\n      '450 ans': -3,\n      '1000 ans': -4,\n      '500 ans': -3\n    },\n    co2Impact: {\n      'Élevé': -3,\n      'Moyen': -2,\n      'Faible': -1\n    }\n  };\n\n  // Appliquer les pénalités\n  product.impactDetails.forEach(detail => {\n    if (detail.label === 'Recyclabilité') {\n      score += impactFactors.recyclability[detail.value] || 0;\n    } else if (detail.label === 'Temps de décomposition') {\n      score += impactFactors.decompositionTime[detail.value] || 0;\n    } else if (detail.label === 'Impact CO2') {\n      score += impactFactors.co2Impact[detail.value] || 0;\n    }\n  });\n\n  // Ajuster le score pour qu'il soit entre 1 et 10\n  return Math.max(1, Math.min(10, Math.round(score)));\n}\n\n// Fonction pour détecter les caractéristiques visuelles\nfunction detectVisualFeatures(imageData) {\n  // Créer un hash basé sur les premiers caractères de l'image\n  const hash = imageData.substring(0, 20).split('').reduce((acc, char) => {\n    return acc + char.charCodeAt(0);\n  }, 0);\n\n  // Utiliser le hash comme seed pour la génération pseudo-aléatoire\n  const random = (min, max) => {\n    const x = Math.sin(hash + min) * 10000;\n    return Math.floor((x - Math.floor(x)) * (max - min + 1)) + min;\n  };\n  return {\n    shape: ['cylindrique', 'plat', 'rectangulaire', 'allongé'][random(0, 3)],\n    transparency: random(3, 9) / 10,\n    shine: random(3, 8) / 10,\n    color: ['clair', 'transparent', 'opaque', 'coloré'][random(0, 3)],\n    texture: ['lisse', 'fin', 'rigide'][random(0, 2)],\n    weight: random(1, 4) / 10\n  };\n}\n\n// Fonction pour identifier le type de produit\nfunction identifyProductType(features) {\n  let bestMatch = null;\n  let bestScore = 0;\n  for (const [productId, productFeatures] of Object.entries(visualFeatures)) {\n    let score = 0;\n\n    // Comparer chaque caractéristique\n    for (const [key, value] of Object.entries(features)) {\n      if (key === 'shape' && productFeatures.shape === value) {\n        score += 2;\n      } else if (key === 'transparency' && Math.abs(productFeatures.transparency - value) < 0.2) {\n        score += 1;\n      } else if (key === 'shine' && Math.abs(productFeatures.shine - value) < 0.2) {\n        score += 1;\n      } else if (key === 'color' && productFeatures.color.includes(value)) {\n        score += 1;\n      } else if (key === 'texture' && productFeatures.texture === value) {\n        score += 1;\n      } else if (key === 'weight' && Math.abs(productFeatures.weight - value) < 0.1) {\n        score += 1;\n      }\n    }\n    if (score > bestScore) {\n      bestScore = score;\n      bestMatch = productId;\n    }\n  }\n  return {\n    productId: bestMatch,\n    confidence: Math.min(100, Math.round(bestScore / 7 * 100))\n  };\n}\n\n// Fonction principale d'analyse d'image\nasync function analyzeImage(imageData) {\n  console.log('Analyse de l\\'image en cours...');\n\n  // Détecter les caractéristiques visuelles\n  const features = detectVisualFeatures(imageData);\n  console.log('Caractéristiques détectées:', features);\n\n  // Identifier le type de produit\n  const identification = identifyProductType(features);\n  console.log('Produit identifié:', identification);\n\n  // Calculer le score environnemental\n  const product = products[identification.productId];\n  const score = calculateEnvironmentalScore(product);\n  console.log('Score environnemental calculé:', score);\n\n  // Mettre à jour le score du produit\n  product.score = score;\n  return {\n    productId: identification.productId,\n    confidence: identification.confidence,\n    features: features,\n    score: score\n  };\n}\nexport { analyzeImage };\nexport default products;","map":{"version":3,"names":["products","name","image","score","impactDetails","label","value","alternatives","description","visualFeatures","shape","transparency","shine","color","texture","weight","calculateEnvironmentalScore","product","impactFactors","recyclability","decompositionTime","co2Impact","forEach","detail","Math","max","min","round","detectVisualFeatures","imageData","hash","substring","split","reduce","acc","char","charCodeAt","random","x","sin","floor","identifyProductType","features","bestMatch","bestScore","productId","productFeatures","Object","entries","key","abs","includes","confidence","analyzeImage","console","log","identification"],"sources":["/Users/cortex/Documents/Code/ecolo/src/data/products.js"],"sourcesContent":["// Base de données des produits plastiques\nconst products = {\n  'bottle-pet': {\n    name: 'Bouteille en PET',\n    image: 'https://example.com/bottle-pet.jpg',\n    score: 4,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PET (Polyéthylène téréphtalate)' },\n      { label: 'Recyclabilité', value: 'Élevée' },\n      { label: 'Temps de décomposition', value: '450 ans' },\n      { label: 'Impact CO2', value: 'Moyen' },\n      { label: 'Code recyclage', value: '1' }\n    ],\n    alternatives: [\n      {\n        name: 'Gourde en inox',\n        image: 'https://example.com/stainless-bottle.jpg',\n        score: 9,\n        description: 'Réutilisable, durable et sans BPA'\n      },\n      {\n        name: 'Bouteille en verre',\n        image: 'https://example.com/glass-bottle.jpg',\n        score: 8,\n        description: '100% recyclable et sans produits chimiques'\n      }\n    ]\n  },\n  'plastic-bag': {\n    name: 'Sac en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PE' },\n      { label: 'Recyclabilité', value: 'Faible' },\n      { label: 'Temps de décomposition', value: '400 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '4' }\n    ],\n    alternatives: [\n      {\n        name: 'Sac en tissu',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Réutilisable des centaines de fois'\n      },\n      {\n        name: 'Panier en osier',\n        image: 'https://via.placeholder.com/150',\n        score: 10,\n        description: '100% naturel et biodégradable'\n      }\n    ]\n  },\n  'plastic-container': {\n    name: 'Contenant alimentaire',\n    image: 'https://via.placeholder.com/150',\n    score: 4,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PP' },\n      { label: 'Recyclabilité', value: 'Bonne' },\n      { label: 'Temps de décomposition', value: '500 ans' },\n      { label: 'Impact CO2', value: 'Moyen' },\n      { label: 'Code recyclage', value: '5' }\n    ],\n    alternatives: [\n      {\n        name: 'Contenant en verre',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Réutilisable et recyclable'\n      },\n      {\n        name: 'Boîte en inox',\n        image: 'https://via.placeholder.com/150',\n        score: 10,\n        description: 'Durable et recyclable'\n      }\n    ]\n  },\n  'straw': {\n    name: 'Paille en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 1,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PP' },\n      { label: 'Recyclabilité', value: 'Très faible' },\n      { label: 'Temps de décomposition', value: '200 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '5' }\n    ],\n    alternatives: [\n      {\n        name: 'Paille en inox',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Réutilisable et lavable'\n      },\n      {\n        name: 'Paille en bambou',\n        image: 'https://via.placeholder.com/150',\n        score: 10,\n        description: '100% biodégradable'\n      }\n    ]\n  },\n  'cutlery': {\n    name: 'Couverts en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PS' },\n      { label: 'Recyclabilité', value: 'Faible' },\n      { label: 'Temps de décomposition', value: '500 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '6' }\n    ],\n    alternatives: [\n      {\n        name: 'Couverts en inox',\n        image: 'https://via.placeholder.com/150',\n        score: 10,\n        description: 'Réutilisables à vie'\n      },\n      {\n        name: 'Couverts en bambou',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Biodégradables et compostables'\n      }\n    ]\n  },\n  'food-wrap': {\n    name: 'Film alimentaire',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PVC' },\n      { label: 'Recyclabilité', value: 'Très faible' },\n      { label: 'Temps de décomposition', value: '1000 ans' },\n      { label: 'Impact CO2', value: 'Élevé' },\n      { label: 'Code recyclage', value: '3' }\n    ],\n    alternatives: [\n      {\n        name: 'Bee\\'s Wrap',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'En cire d\\'abeille, réutilisable et compostable'\n      },\n      {\n        name: 'Bocaux en verre',\n        image: 'https://via.placeholder.com/150',\n        score: 10,\n        description: 'Réutilisables et recyclables'\n      }\n    ]\n  },\n  'shampoo-bottle': {\n    name: 'Flacon de shampooing',\n    image: 'https://via.placeholder.com/150',\n    score: 3,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'HDPE' },\n      { label: 'Recyclabilité', value: 'Bonne' },\n      { label: 'Temps de décomposition', value: '450 ans' },\n      { label: 'Impact CO2', value: 'Moyen' },\n      { label: 'Code recyclage', value: '2' }\n    ],\n    alternatives: [\n      {\n        name: 'Shampooing solide',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Sans emballage plastique'\n      },\n      {\n        name: 'Recharge en vrac',\n        image: 'https://via.placeholder.com/150',\n        score: 8,\n        description: 'Réduction des déchets d\\'emballage'\n      }\n    ]\n  }\n};\n\n// Caractéristiques visuelles pour l'identification\nconst visualFeatures = {\n  'bottle-pet': {\n    shape: 'cylindrique',\n    transparency: 0.8,\n    shine: 0.7,\n    color: ['clair', 'transparent'],\n    texture: 'lisse',\n    weight: 0.3\n  },\n  'plastic-bag': {\n    shape: 'plat',\n    transparency: 0.6,\n    shine: 0.4,\n    color: ['transparent', 'clair'],\n    texture: 'fin',\n    weight: 0.1\n  },\n  'plastic-container': {\n    shape: 'rectangulaire',\n    transparency: 0.5,\n    shine: 0.6,\n    color: ['clair', 'opaque'],\n    texture: 'rigide',\n    weight: 0.4\n  },\n  'straw': {\n    shape: 'cylindrique',\n    transparency: 0.7,\n    shine: 0.5,\n    color: ['clair', 'transparent'],\n    texture: 'lisse',\n    weight: 0.05\n  },\n  'cutlery': {\n    shape: 'allongé',\n    transparency: 0.3,\n    shine: 0.8,\n    color: ['clair', 'opaque'],\n    texture: 'rigide',\n    weight: 0.2\n  },\n  'food-wrap': {\n    shape: 'plat',\n    transparency: 0.9,\n    shine: 0.3,\n    color: ['transparent'],\n    texture: 'fin',\n    weight: 0.1\n  },\n  'shampoo-bottle': {\n    shape: 'cylindrique',\n    transparency: 0.4,\n    shine: 0.6,\n    color: ['opaque', 'coloré'],\n    texture: 'rigide',\n    weight: 0.3\n  }\n};\n\n// Fonction pour calculer le score environnemental\nfunction calculateEnvironmentalScore(product) {\n  let score = 10;\n  \n  // Pénalités basées sur les caractéristiques\n  const impactFactors = {\n    recyclability: {\n      'Élevée': 0,\n      'Moyenne': -2,\n      'Faible': -4\n    },\n    decompositionTime: {\n      '450 ans': -3,\n      '1000 ans': -4,\n      '500 ans': -3\n    },\n    co2Impact: {\n      'Élevé': -3,\n      'Moyen': -2,\n      'Faible': -1\n    }\n  };\n\n  // Appliquer les pénalités\n  product.impactDetails.forEach(detail => {\n    if (detail.label === 'Recyclabilité') {\n      score += impactFactors.recyclability[detail.value] || 0;\n    } else if (detail.label === 'Temps de décomposition') {\n      score += impactFactors.decompositionTime[detail.value] || 0;\n    } else if (detail.label === 'Impact CO2') {\n      score += impactFactors.co2Impact[detail.value] || 0;\n    }\n  });\n\n  // Ajuster le score pour qu'il soit entre 1 et 10\n  return Math.max(1, Math.min(10, Math.round(score)));\n}\n\n// Fonction pour détecter les caractéristiques visuelles\nfunction detectVisualFeatures(imageData) {\n  // Créer un hash basé sur les premiers caractères de l'image\n  const hash = imageData.substring(0, 20).split('').reduce((acc, char) => {\n    return acc + char.charCodeAt(0);\n  }, 0);\n\n  // Utiliser le hash comme seed pour la génération pseudo-aléatoire\n  const random = (min, max) => {\n    const x = Math.sin(hash + min) * 10000;\n    return Math.floor((x - Math.floor(x)) * (max - min + 1)) + min;\n  };\n\n  return {\n    shape: ['cylindrique', 'plat', 'rectangulaire', 'allongé'][random(0, 3)],\n    transparency: random(3, 9) / 10,\n    shine: random(3, 8) / 10,\n    color: ['clair', 'transparent', 'opaque', 'coloré'][random(0, 3)],\n    texture: ['lisse', 'fin', 'rigide'][random(0, 2)],\n    weight: random(1, 4) / 10\n  };\n}\n\n// Fonction pour identifier le type de produit\nfunction identifyProductType(features) {\n  let bestMatch = null;\n  let bestScore = 0;\n\n  for (const [productId, productFeatures] of Object.entries(visualFeatures)) {\n    let score = 0;\n    \n    // Comparer chaque caractéristique\n    for (const [key, value] of Object.entries(features)) {\n      if (key === 'shape' && productFeatures.shape === value) {\n        score += 2;\n      } else if (key === 'transparency' && \n                 Math.abs(productFeatures.transparency - value) < 0.2) {\n        score += 1;\n      } else if (key === 'shine' && \n                 Math.abs(productFeatures.shine - value) < 0.2) {\n        score += 1;\n      } else if (key === 'color' && \n                 productFeatures.color.includes(value)) {\n        score += 1;\n      } else if (key === 'texture' && \n                 productFeatures.texture === value) {\n        score += 1;\n      } else if (key === 'weight' && \n                 Math.abs(productFeatures.weight - value) < 0.1) {\n        score += 1;\n      }\n    }\n\n    if (score > bestScore) {\n      bestScore = score;\n      bestMatch = productId;\n    }\n  }\n\n  return {\n    productId: bestMatch,\n    confidence: Math.min(100, Math.round((bestScore / 7) * 100))\n  };\n}\n\n// Fonction principale d'analyse d'image\nasync function analyzeImage(imageData) {\n  console.log('Analyse de l\\'image en cours...');\n  \n  // Détecter les caractéristiques visuelles\n  const features = detectVisualFeatures(imageData);\n  console.log('Caractéristiques détectées:', features);\n  \n  // Identifier le type de produit\n  const identification = identifyProductType(features);\n  console.log('Produit identifié:', identification);\n  \n  // Calculer le score environnemental\n  const product = products[identification.productId];\n  const score = calculateEnvironmentalScore(product);\n  console.log('Score environnemental calculé:', score);\n  \n  // Mettre à jour le score du produit\n  product.score = score;\n  \n  return {\n    productId: identification.productId,\n    confidence: identification.confidence,\n    features: features,\n    score: score\n  };\n}\n\nexport { analyzeImage };\nexport default products; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}