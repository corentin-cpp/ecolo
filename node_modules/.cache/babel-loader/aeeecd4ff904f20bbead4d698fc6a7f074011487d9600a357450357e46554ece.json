{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"scanner-section\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"analysis-section\"\n};\nconst _hoisted_4 = {\n  class: \"loading\"\n};\nconst _hoisted_5 = {\n  class: \"analysis-details\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"analysis-progress\"\n};\nconst _hoisted_7 = {\n  class: \"progress-bar\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"product-info\"\n};\nconst _hoisted_9 = {\n  class: \"product-header\"\n};\nconst _hoisted_10 = [\"src\", \"alt\"];\nconst _hoisted_11 = {\n  class: \"score-circle\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"analysis-details\"\n};\nconst _hoisted_13 = {\n  class: \"confidence-level\"\n};\nconst _hoisted_14 = {\n  class: \"features-grid\"\n};\nconst _hoisted_15 = {\n  class: \"feature-label\"\n};\nconst _hoisted_16 = {\n  class: \"feature-value\"\n};\nconst _hoisted_17 = {\n  class: \"details-section\"\n};\nconst _hoisted_18 = {\n  class: \"impact-details\"\n};\nconst _hoisted_19 = {\n  class: \"impact-label\"\n};\nconst _hoisted_20 = {\n  key: 1,\n  class: \"alternatives-section\"\n};\nconst _hoisted_21 = {\n  class: \"alternatives-list\"\n};\nconst _hoisted_22 = [\"src\", \"alt\"];\nconst _hoisted_23 = {\n  class: \"alternative-info\"\n};\nconst _hoisted_24 = {\n  class: \"score\"\n};\nconst _hoisted_25 = {\n  class: \"description\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[11] || (_cache[11] = _createElementVNode(\"header\", null, [_createElementVNode(\"h1\", null, \"EcoScan\"), _createElementVNode(\"p\", null, \"Scannez vos produits pour connaÃ®tre leur impact environnemental\")], -1 /* HOISTED */)), _createElementVNode(\"main\", null, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"scanner-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.openScanner && $options.openScanner(...args))\n  }, _cache[2] || (_cache[2] = [_createElementVNode(\"div\", {\n    class: \"scanner-icon\"\n  }, \"ðŸ“·\", -1 /* HOISTED */), _createElementVNode(\"span\", null, \"Scanner un produit\", -1 /* HOISTED */)])), _createElementVNode(\"div\", {\n    class: \"scanner-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.openScanner && $options.openScanner(...args))\n  }, _cache[3] || (_cache[3] = [_createElementVNode(\"div\", {\n    class: \"scanner-icon\"\n  }, \"ðŸ“·\", -1 /* HOISTED */), _createElementVNode(\"span\", null, \"Importer une image\", -1 /* HOISTED */)]))]), $data.isAnalyzing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"spinner\"\n  }, null, -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"p\", null, \"Analyse en cours...\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_5, _toDisplayString($data.analysisMessage), 1 /* TEXT */), $data.analysisProgress ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", {\n    class: \"progress\",\n    style: _normalizeStyle({\n      width: $data.analysisProgress + '%'\n    })\n  }, null, 4 /* STYLE */)]), _createElementVNode(\"p\", null, _toDisplayString($data.analysisProgress) + \"%\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true), $data.scannedProduct ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"img\", {\n    src: $data.scannedProduct.image,\n    alt: $data.scannedProduct.name,\n    class: \"product-image\"\n  }, null, 8 /* PROPS */, _hoisted_10), _createElementVNode(\"h2\", null, _toDisplayString($data.scannedProduct.name), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"eco-score\", $options.getScoreClass($data.scannedProduct.score)])\n  }, [_createElementVNode(\"div\", _hoisted_11, _toDisplayString($data.scannedProduct.score) + \"/10 \", 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($options.getScoreMessage($data.scannedProduct.score)), 1 /* TEXT */)], 2 /* CLASS */), _ctx.analysisResult ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"RÃ©sultats de l'analyse\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_13, [_cache[6] || (_cache[6] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"Niveau de confiance :\", -1 /* HOISTED */)), _createElementVNode(\"span\", {\n    class: _normalizeClass([\"value\", _ctx.getConfidenceClass(_ctx.analysisResult.confidence)])\n  }, _toDisplayString(_ctx.analysisResult.confidence) + \"% \", 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.analysisResult.features, (value, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"feature-item\",\n      key: key\n    }, [_createElementVNode(\"span\", _hoisted_15, _toDisplayString($options.formatFeatureLabel(key)), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_16, _toDisplayString($options.formatFeatureValue(key, value)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_17, [_cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"Impact environnemental\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_18, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.scannedProduct.impactDetails, (detail, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"impact-item\",\n      key: index\n    }, [_createElementVNode(\"span\", _hoisted_19, _toDisplayString(detail.label), 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: _normalizeClass([\"impact-value\", $options.getImpactClass(detail.value)])\n    }, _toDisplayString(detail.value), 3 /* TEXT, CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.scannedProduct.alternatives.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"Alternatives plus Ã©cologiques\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.scannedProduct.alternatives, (alt, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"alternative\",\n      key: index\n    }, [_createElementVNode(\"img\", {\n      src: alt.image,\n      alt: alt.name,\n      class: \"alternative-image\"\n    }, null, 8 /* PROPS */, _hoisted_22), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"h4\", null, _toDisplayString(alt.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_24, \"Score : \" + _toDisplayString(alt.score) + \"/10\", 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_25, _toDisplayString(alt.description), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n    class: \"tips-section\"\n  }, [_createElementVNode(\"h3\", null, \"Conseils d'utilisation\"), _createElementVNode(\"ul\", {\n    class: \"tips-list\"\n  }, [_createElementVNode(\"li\", null, \"PrivilÃ©giez les alternatives rÃ©utilisables\"), _createElementVNode(\"li\", null, \"Recyclez correctement vos dÃ©chets plastiques\"), _createElementVNode(\"li\", null, \"Ã‰vitez les produits Ã  usage unique\")])], -1 /* HOISTED */))])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","openScanner","$data","isAnalyzing","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","analysisMessage","analysisProgress","_hoisted_6","_hoisted_7","style","_normalizeStyle","width","_createCommentVNode","scannedProduct","_hoisted_8","_hoisted_9","src","image","alt","name","_hoisted_10","_normalizeClass","getScoreClass","score","_hoisted_11","getScoreMessage","_ctx","analysisResult","_hoisted_12","_hoisted_13","getConfidenceClass","confidence","_hoisted_14","_Fragment","_renderList","features","value","_hoisted_15","formatFeatureLabel","_hoisted_16","formatFeatureValue","_hoisted_17","_hoisted_18","impactDetails","detail","index","_hoisted_19","label","getImpactClass","alternatives","length","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","description"],"sources":["/Users/cortex/Documents/Code/ecolo/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <header>\n      <h1>EcoScan</h1>\n      <p>Scannez vos produits pour connaÃ®tre leur impact environnemental</p>\n    </header>\n\n    <main>\n      <div class=\"scanner-section\">\n        <div class=\"scanner-button\" @click=\"openScanner\">\n          <div class=\"scanner-icon\">ðŸ“·</div>\n          <span>Scanner un produit</span>\n        </div>\n        <div class=\"scanner-button\" @click=\"openScanner\">\n          <div class=\"scanner-icon\">ðŸ“·</div>\n          <span>Importer une image</span>\n        </div>\n      </div>\n\n      <div class=\"analysis-section\" v-if=\"isAnalyzing\">\n        <div class=\"loading\">\n          <div class=\"spinner\"></div>\n          <p>Analyse en cours...</p>\n          <p class=\"analysis-details\">{{ analysisMessage }}</p>\n          <div class=\"analysis-progress\" v-if=\"analysisProgress\">\n            <div class=\"progress-bar\">\n              <div class=\"progress\" :style=\"{ width: analysisProgress + '%' }\"></div>\n            </div>\n            <p>{{ analysisProgress }}%</p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"product-info\" v-if=\"scannedProduct\">\n        <div class=\"product-header\">\n          <img :src=\"scannedProduct.image\" :alt=\"scannedProduct.name\" class=\"product-image\">\n          <h2>{{ scannedProduct.name }}</h2>\n        </div>\n\n        <div class=\"eco-score\" :class=\"getScoreClass(scannedProduct.score)\">\n          <div class=\"score-circle\">\n            {{ scannedProduct.score }}/10\n          </div>\n          <p>{{ getScoreMessage(scannedProduct.score) }}</p>\n        </div>\n\n        <div class=\"analysis-details\" v-if=\"analysisResult\">\n          <h3>RÃ©sultats de l'analyse</h3>\n          <div class=\"confidence-level\">\n            <span class=\"label\">Niveau de confiance :</span>\n            <span class=\"value\" :class=\"getConfidenceClass(analysisResult.confidence)\">\n              {{ analysisResult.confidence }}%\n            </span>\n          </div>\n          \n          <div class=\"features-grid\">\n            <div class=\"feature-item\" v-for=\"(value, key) in analysisResult.features\" :key=\"key\">\n              <span class=\"feature-label\">{{ formatFeatureLabel(key) }}</span>\n              <span class=\"feature-value\">{{ formatFeatureValue(key, value) }}</span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"details-section\">\n          <h3>Impact environnemental</h3>\n          <div class=\"impact-details\">\n            <div class=\"impact-item\" v-for=\"(detail, index) in scannedProduct.impactDetails\" :key=\"index\">\n              <span class=\"impact-label\">{{ detail.label }}</span>\n              <span class=\"impact-value\" :class=\"getImpactClass(detail.value)\">{{ detail.value }}</span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"alternatives-section\" v-if=\"scannedProduct.alternatives.length > 0\">\n          <h3>Alternatives plus Ã©cologiques</h3>\n          <div class=\"alternatives-list\">\n            <div class=\"alternative\" v-for=\"(alt, index) in scannedProduct.alternatives\" :key=\"index\">\n              <img :src=\"alt.image\" :alt=\"alt.name\" class=\"alternative-image\">\n              <div class=\"alternative-info\">\n                <h4>{{ alt.name }}</h4>\n                <p class=\"score\">Score : {{ alt.score }}/10</p>\n                <p class=\"description\">{{ alt.description }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"tips-section\">\n          <h3>Conseils d'utilisation</h3>\n          <ul class=\"tips-list\">\n            <li>PrivilÃ©giez les alternatives rÃ©utilisables</li>\n            <li>Recyclez correctement vos dÃ©chets plastiques</li>\n            <li>Ã‰vitez les produits Ã  usage unique</li>\n          </ul>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport products, { analyzeImage } from './data/products'\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      scannedProduct: null,\n      isAnalyzing: false,\n      analysisMessage: 'Analyse de l\\'image...',\n      analysisProgress: 0,\n      analysisFeatures: null,\n      products\n    }\n  },\n  methods: {\n    // Fonction pour gÃ©nÃ©rer un nombre pseudo-alÃ©atoire basÃ© sur une graine\n    seededRandom(seed) {\n      const x = Math.sin(seed) * 10000;\n      return x - Math.floor(x);\n    },\n    \n    // Fonction pour sÃ©lectionner un produit alÃ©atoire\n    getRandomProduct() {\n      const productIds = Object.keys(this.products);\n      const randomIndex = Math.floor(this.seededRandom(Date.now()) * productIds.length);\n      return this.products[productIds[randomIndex]];\n    },\n\n    openScanner() {\n      this.isAnalyzing = true;\n      this.analysisMessage = 'Analyse de l\\'image...';\n      this.analysisProgress = 0;\n      \n      // Simuler l'analyse avec une barre de progression\n      const interval = setInterval(() => {\n        this.analysisProgress += 5;\n        if (this.analysisProgress >= 100) {\n          clearInterval(interval);\n          // SÃ©lectionner un produit alÃ©atoire\n          this.scannedProduct = this.getRandomProduct();\n          this.analysisFeatures = {\n            shape: this.scannedProduct.impactDetails.find(d => d.label === 'Type de plastique')?.value || 'Inconnu',\n            transparency: this.seededRandom(Date.now() + 1) * 0.5 + 0.5,\n            shine: this.seededRandom(Date.now() + 2) * 0.5 + 0.5,\n            color: this.seededRandom(Date.now() + 3) > 0.5 ? 'clair' : 'colorÃ©',\n            texture: this.seededRandom(Date.now() + 4) > 0.5 ? 'lisse' : 'rugueux',\n            confidence: Math.floor(this.seededRandom(Date.now() + 5) * 30 + 70)\n          };\n          this.isAnalyzing = false;\n        }\n      }, 100);\n    },\n    async handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.isAnalyzing = true;\n        this.analysisMessage = 'Analyse de l\\'image...';\n        this.analysisProgress = 0;\n        \n        const interval = setInterval(() => {\n          this.analysisProgress += 5;\n          if (this.analysisProgress >= 100) {\n            clearInterval(interval);\n          }\n        }, 100);\n\n        const reader = new FileReader();\n        \n        reader.onload = async (e) => {\n          try {\n            this.analysisMessage = 'Reconnaissance du type de plastique...';\n            const result = await analyzeImage(e.target.result);\n            console.log('RÃ©sultat de l\\'analyse:', result);\n            \n            if (result && result.productId) {\n              this.scannedProduct = this.products[result.productId];\n              this.analysisResult = {\n                confidence: result.confidence,\n                features: result.features\n              };\n              this.scannedProduct.score = result.score;\n            } else {\n              throw new Error('Impossible d\\'identifier le produit');\n            }\n          } catch (error) {\n            console.error('Erreur lors de l\\'analyse:', error);\n            this.analysisMessage = 'Erreur lors de l\\'analyse. Veuillez rÃ©essayer.';\n            this.scannedProduct = null;\n            this.analysisResult = null;\n          } finally {\n            this.isAnalyzing = false;\n            this.analysisProgress = 0;\n          }\n        };\n        \n        reader.onerror = () => {\n          console.error('Erreur lors de la lecture du fichier');\n          this.analysisMessage = 'Erreur lors de la lecture du fichier. Veuillez rÃ©essayer.';\n          this.isAnalyzing = false;\n          this.analysisProgress = 0;\n        };\n        \n        reader.readAsDataURL(file);\n      }\n    },\n    getScoreClass(score) {\n      if (score >= 8) return 'excellent'\n      if (score >= 6) return 'good'\n      if (score >= 4) return 'medium'\n      return 'poor'\n    },\n    getScoreMessage(score) {\n      if (score >= 8) return 'Excellent choix !'\n      if (score >= 6) return 'Bon choix'\n      if (score >= 4) return 'Peut mieux faire'\n      return 'Impact environnemental Ã©levÃ©'\n    },\n    getImpactClass(value) {\n      if (value === 'Ã‰levÃ©') return 'high'\n      if (value === 'Moyenne' || value === 'Moyen') return 'medium'\n      return 'low'\n    },\n    formatFeatureLabel(key) {\n      const labels = {\n        transparency: 'Transparence',\n        shine: 'Brillance',\n        color: 'Couleur',\n        texture: 'Texture',\n        confidence: 'Confiance'\n      };\n      return labels[key] || key;\n    },\n    formatFeatureValue(key, value) {\n      if (typeof value === 'boolean') {\n        return value ? 'Oui' : 'Non';\n      }\n      if (key === 'confidence') {\n        return value + '%';\n      }\n      return value;\n    },\n    getFeatureClass(key, value) {\n      if (key === 'confidence') {\n        if (value >= 90) return 'high';\n        if (value >= 80) return 'medium';\n        return 'low';\n      }\n      return '';\n    }\n  },\n  computed: {\n    filteredFeatures() {\n      if (!this.analysisFeatures) return [];\n      return Object.entries(this.analysisFeatures)\n        .filter(([key]) => key !== 'scores')\n        .reduce((acc, [key, value]) => {\n          acc[key] = value;\n          return acc;\n        }, {});\n    }\n  }\n}\n</script>\n\n<style>\n.app {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\nheader {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\nheader h1 {\n  color: #2e7d32;\n  margin-bottom: 10px;\n}\n\n.scanner-section {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.scanner-button, .upload-button {\n  background-color: #4CAF50;\n  color: white;\n  padding: 20px;\n  border-radius: 12px;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  margin: 10px;\n  transition: transform 0.2s;\n}\n\n.scanner-button:hover, .upload-button:hover {\n  transform: scale(1.05);\n}\n\n.upload-section {\n  margin-top: 20px;\n}\n\n.scanner-icon, .upload-icon {\n  font-size: 24px;\n}\n\n.analysis-section {\n  text-align: center;\n  margin: 20px 0;\n}\n\n.loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n}\n\n.analysis-details {\n  color: #666;\n  font-size: 0.9em;\n  margin-top: 10px;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #4CAF50;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.product-info {\n  background-color: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.product-header {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.product-image {\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n  border-radius: 8px;\n}\n\n.eco-score {\n  text-align: center;\n  margin: 20px 0;\n  padding: 20px;\n  border-radius: 12px;\n}\n\n.score-circle {\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background-color: #4CAF50;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  margin: 0 auto 10px;\n}\n\n.excellent .score-circle { background-color: #2e7d32; }\n.good .score-circle { background-color: #4CAF50; }\n.medium .score-circle { background-color: #ff9800; }\n.poor .score-circle { background-color: #f44336; }\n\n.impact-details {\n  margin: 20px 0;\n}\n\n.impact-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.impact-value {\n  font-weight: bold;\n}\n\n.impact-value.high { color: #f44336; }\n.impact-value.medium { color: #ff9800; }\n.impact-value.low { color: #4CAF50; }\n\n.alternatives-section {\n  margin-top: 30px;\n}\n\n.alternatives-list {\n  display: grid;\n  gap: 15px;\n  margin-top: 15px;\n}\n\n.alternative {\n  display: flex;\n  align-items: flex-start;\n  gap: 15px;\n  padding: 15px;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  transition: transform 0.2s;\n}\n\n.alternative:hover {\n  transform: translateY(-2px);\n}\n\n.alternative-image {\n  width: 60px;\n  height: 60px;\n  object-fit: cover;\n  border-radius: 4px;\n}\n\n.alternative-info {\n  flex: 1;\n}\n\n.alternative-info h4 {\n  margin: 0 0 5px 0;\n  color: #2e7d32;\n}\n\n.alternative-info .score {\n  color: #666;\n  font-size: 0.9em;\n  margin: 5px 0;\n}\n\n.alternative-info .description {\n  color: #333;\n  font-size: 0.9em;\n  margin: 5px 0;\n}\n\n.tips-section {\n  margin-top: 30px;\n  padding-top: 20px;\n  border-top: 1px solid #eee;\n}\n\n.tips-list {\n  list-style-type: none;\n  padding: 0;\n}\n\n.tips-list li {\n  padding: 10px;\n  margin: 5px 0;\n  background-color: #e8f5e9;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.tips-list li:before {\n  content: 'ðŸŒ±';\n}\n\n.analysis-progress {\n  margin-top: 20px;\n  width: 100%;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 10px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  overflow: hidden;\n}\n\n.progress {\n  height: 100%;\n  background-color: #4CAF50;\n  transition: width 0.3s ease;\n}\n\n.features-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 15px;\n  margin-top: 15px;\n}\n\n.feature-item {\n  background-color: #f5f5f5;\n  padding: 10px;\n  border-radius: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.feature-label {\n  font-weight: bold;\n  color: #666;\n}\n\n.feature-value {\n  font-weight: bold;\n}\n\n.feature-value.high { color: #4CAF50; }\n.feature-value.medium { color: #ff9800; }\n.feature-value.low { color: #f44336; }\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}