{"ast":null,"code":"export const products = {\n  'bottle-pet': {\n    name: 'Bouteille en PET',\n    image: 'https://via.placeholder.com/150',\n    score: 3,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PET'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Moyenne'\n    }, {\n      label: 'Temps de décomposition',\n      value: '450 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }],\n    alternatives: [{\n      name: 'Gourde en inox',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Réutilisable à vie, recyclable à 100%'\n    }, {\n      name: 'Bouteille en verre',\n      image: 'https://via.placeholder.com/150',\n      score: 8,\n      description: 'Recyclable à l\\'infini'\n    }]\n  },\n  'plastic-bag': {\n    name: 'Sac en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PE'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Faible'\n    }, {\n      label: 'Temps de décomposition',\n      value: '400 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Élevé'\n    }],\n    alternatives: [{\n      name: 'Sac en tissu',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Réutilisable des centaines de fois'\n    }, {\n      name: 'Panier en osier',\n      image: 'https://via.placeholder.com/150',\n      score: 10,\n      description: '100% naturel et biodégradable'\n    }]\n  },\n  'plastic-container': {\n    name: 'Contenant alimentaire',\n    image: 'https://via.placeholder.com/150',\n    score: 4,\n    impactDetails: [{\n      label: 'Type de plastique',\n      value: 'PP'\n    }, {\n      label: 'Recyclabilité',\n      value: 'Bonne'\n    }, {\n      label: 'Temps de décomposition',\n      value: '500 ans'\n    }, {\n      label: 'Impact CO2',\n      value: 'Moyen'\n    }],\n    alternatives: [{\n      name: 'Contenant en verre',\n      image: 'https://via.placeholder.com/150',\n      score: 9,\n      description: 'Réutilisable et recyclable'\n    }, {\n      name: 'Boîte en inox',\n      image: 'https://via.placeholder.com/150',\n      score: 10,\n      description: 'Durable et recyclable'\n    }]\n  }\n};\n\n// Fonction pour détecter les caractéristiques visuelles du plastique\nconst detectPlasticFeatures = imageData => {\n  // Dans une vraie application, on utiliserait une API de vision par ordinateur\n  // Pour la simulation, nous allons utiliser des caractéristiques typiques des images de plastique\n  const features = {\n    transparency: Math.random() > 0.5,\n    // Le plastique est souvent transparent\n    shine: Math.random() > 0.7,\n    // Le plastique a souvent un aspect brillant\n    color: Math.random() > 0.3 ? 'clair' : 'foncé' // Les plastiques sont souvent de couleur claire\n  };\n  return features;\n};\n\n// Fonction pour identifier le type de plastique\nconst identifyPlasticType = features => {\n  if (features.transparency && features.shine) {\n    return 'bottle-pet'; // Bouteille en PET\n  } else if (!features.transparency && features.color === 'clair') {\n    return 'plastic-bag'; // Sac en plastique\n  } else {\n    return 'plastic-container'; // Contenant alimentaire\n  }\n};\nexport const analyzeImage = async imageData => {\n  console.log('Début de l\\'analyse de l\\'image...');\n\n  // Simulation de l'analyse des caractéristiques visuelles\n  const features = detectPlasticFeatures(imageData);\n  console.log('Caractéristiques détectées:', features);\n\n  // Identification du type de plastique\n  const plasticType = identifyPlasticType(features);\n  console.log('Type de plastique identifié:', plasticType);\n\n  // Simulation d'un délai d'analyse\n  await new Promise(resolve => setTimeout(resolve, 2000));\n  return plasticType;\n};","map":{"version":3,"names":["products","name","image","score","impactDetails","label","value","alternatives","description","detectPlasticFeatures","imageData","features","transparency","Math","random","shine","color","identifyPlasticType","analyzeImage","console","log","plasticType","Promise","resolve","setTimeout"],"sources":["/Users/cortex/Documents/Code/ecolo/src/data/products.js"],"sourcesContent":["export const products = {\n  'bottle-pet': {\n    name: 'Bouteille en PET',\n    image: 'https://via.placeholder.com/150',\n    score: 3,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PET' },\n      { label: 'Recyclabilité', value: 'Moyenne' },\n      { label: 'Temps de décomposition', value: '450 ans' },\n      { label: 'Impact CO2', value: 'Élevé' }\n    ],\n    alternatives: [\n      {\n        name: 'Gourde en inox',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Réutilisable à vie, recyclable à 100%'\n      },\n      {\n        name: 'Bouteille en verre',\n        image: 'https://via.placeholder.com/150',\n        score: 8,\n        description: 'Recyclable à l\\'infini'\n      }\n    ]\n  },\n  'plastic-bag': {\n    name: 'Sac en plastique',\n    image: 'https://via.placeholder.com/150',\n    score: 2,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PE' },\n      { label: 'Recyclabilité', value: 'Faible' },\n      { label: 'Temps de décomposition', value: '400 ans' },\n      { label: 'Impact CO2', value: 'Élevé' }\n    ],\n    alternatives: [\n      {\n        name: 'Sac en tissu',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Réutilisable des centaines de fois'\n      },\n      {\n        name: 'Panier en osier',\n        image: 'https://via.placeholder.com/150',\n        score: 10,\n        description: '100% naturel et biodégradable'\n      }\n    ]\n  },\n  'plastic-container': {\n    name: 'Contenant alimentaire',\n    image: 'https://via.placeholder.com/150',\n    score: 4,\n    impactDetails: [\n      { label: 'Type de plastique', value: 'PP' },\n      { label: 'Recyclabilité', value: 'Bonne' },\n      { label: 'Temps de décomposition', value: '500 ans' },\n      { label: 'Impact CO2', value: 'Moyen' }\n    ],\n    alternatives: [\n      {\n        name: 'Contenant en verre',\n        image: 'https://via.placeholder.com/150',\n        score: 9,\n        description: 'Réutilisable et recyclable'\n      },\n      {\n        name: 'Boîte en inox',\n        image: 'https://via.placeholder.com/150',\n        score: 10,\n        description: 'Durable et recyclable'\n      }\n    ]\n  }\n};\n\n// Fonction pour détecter les caractéristiques visuelles du plastique\nconst detectPlasticFeatures = (imageData) => {\n  // Dans une vraie application, on utiliserait une API de vision par ordinateur\n  // Pour la simulation, nous allons utiliser des caractéristiques typiques des images de plastique\n  const features = {\n    transparency: Math.random() > 0.5, // Le plastique est souvent transparent\n    shine: Math.random() > 0.7, // Le plastique a souvent un aspect brillant\n    color: Math.random() > 0.3 ? 'clair' : 'foncé' // Les plastiques sont souvent de couleur claire\n  };\n  return features;\n};\n\n// Fonction pour identifier le type de plastique\nconst identifyPlasticType = (features) => {\n  if (features.transparency && features.shine) {\n    return 'bottle-pet'; // Bouteille en PET\n  } else if (!features.transparency && features.color === 'clair') {\n    return 'plastic-bag'; // Sac en plastique\n  } else {\n    return 'plastic-container'; // Contenant alimentaire\n  }\n};\n\nexport const analyzeImage = async (imageData) => {\n  console.log('Début de l\\'analyse de l\\'image...');\n  \n  // Simulation de l'analyse des caractéristiques visuelles\n  const features = detectPlasticFeatures(imageData);\n  console.log('Caractéristiques détectées:', features);\n  \n  // Identification du type de plastique\n  const plasticType = identifyPlasticType(features);\n  console.log('Type de plastique identifié:', plasticType);\n  \n  // Simulation d'un délai d'analyse\n  await new Promise(resolve => setTimeout(resolve, 2000));\n  \n  return plasticType;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}